<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc maxdepth="3"?>
<?asciidoc-numbered?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Indus Production Line </title>
<subtitle>Configuration Guide</subtitle>
<date>2018-08-16</date>
<author>
<personname>
<firstname>Version 1.18-SNAPSHOT</firstname>
</personname>
</author>
<authorinitials>V</authorinitials>
</info>
<table frame="all" rowsep="1" colsep="1">
<title>History</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="12.5*"/>
<colspec colname="col_2" colwidth="12.5*"/>
<colspec colname="col_3" colwidth="75*"/>
<thead>
<row>
<entry align="center" valign="top">Date</entry>
<entry align="center" valign="top">Author</entry>
<entry align="left" valign="top">Detail
Unresolved directive in subdocs/_init.adoc - include::D:\workspaceJava\cg-wm\target/generated-docs/history/ci-pf-configuration.adoc.psv[]</entry>
</row>
</thead>
</tgroup>
</table>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_introduction">
<title>Introduction</title>
<simpara>This document describe, from scratch, how to configure CI Platform on BPM Factory.</simpara>
<simpara>This should work for any project using the Production Line from CG Indus team.</simpara>
</section>
<section xml:id="_prerequisites">
<title>Prerequisites</title>
<section xml:id="_ci_pf_initialization">
<title>CI PF Initialization</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<simpara>Browse and ask for a CI platform :</simpara>
<literallayout class="monospaced">Service Catalog -&gt; iProd -&gt; Production Line - PLaaS -&gt; Production Line Initialization</literallayout>
<simpara>Later, every help tickets will be raised from here :</simpara>
<literallayout class="monospaced">Service Catalog -&gt; iProd -&gt; Production Line - PLaaS -&gt; Production Line Coaching and Support</literallayout>
<simpara>When CI PF is up and running, test the access :
<link xl:href="https://bpmfactory.s2-eu.nvx.com">https://bpmfactory.s2-eu.nvx.com</link></simpara>
</section>
<section xml:id="_technical_account">
<title>Technical account</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<simpara>Using a fake account created in LAM won&#8217;t work : you can&#8217;t login to Gerrit with it, hence no HTTP nor SSH key handling is possible.</simpara>
<section xml:id="_corp_account">
<title>CORP account</title>
<simpara>Ask for the creation of a technical account (for communication between Jenkins, SonarQube, Gerrit and Nexus) : raise a ticket in</simpara>
<literallayout class="monospaced">Service Catalog -&gt; iPlan -&gt; Engagement Repository - ERaaS -&gt; CTF: Service account creation</literallayout>
<simpara>Add it to LAM (see below).</simpara>
<simpara>The user will have to be re-conducted every 6 months, a mail will be sent to administrator. The password never expires.</simpara>
</section>
<section xml:id="_administration">
<title>Administration</title>
<simpara>You can administer it here <link xl:href="https://corporatedirectory.nvx.com">https://corporatedirectory.nvx.com</link> in section <emphasis role="strong">My Service Accounts</emphasis></simpara>
</section>
</section>
<section xml:id="_visio_account_with_pc">
<title>Visio account with PC</title>
<simpara>If you have a TV where you want to display your devOps KPI, you have to order a PC with a specific account.</simpara>
<simpara>Information :</simpara>
<itemizedlist>
<listitem>
<simpara>Price is 220€ + 78€/month.</simpara>
</listitem>
<listitem>
<simpara>5-10 days estimated delivery.</simpara>
</listitem>
<listitem>
<simpara>The "Tiny PC" cannot display more than HD.</simpara>
</listitem>
<listitem>
<simpara>As of early 2018, it seems that only Dells can display 4K.</simpara>
</listitem>
</itemizedlist>
<simpara>Steps :</simpara>
<itemizedlist>
<listitem>
<simpara>Prepare the list of hosts and ports the PC should access</simpara>
</listitem>
<listitem>
<simpara>Browse <link xl:href="https://nvxiticsprod.service-now.com/itics_ess/">https://nvxiticsprod.service-now.com/itics_ess/</link></simpara>
</listitem>
<listitem>
<simpara>Go to <emphasis role="strong">Order Services</emphasis> &#8594; <emphasis role="strong">Physical Computing</emphasis> &#8594; <emphasis role="strong">Communication</emphasis> &#8594; <emphasis role="strong">Project Skype Conferencing</emphasis></simpara>
</listitem>
<listitem>
<simpara>Put the order, giving as much detail as possible (hosts/ports/HD/4K&#8230;&#8203;). Then wait for the validation of the EM.</simpara>
</listitem>
<listitem>
<simpara>Go buy the TV while waiting for the account.</simpara>
</listitem>
</itemizedlist>
<section xml:id="_add_hosts_ports">
<title>Add hosts/ports</title>
<itemizedlist>
<listitem>
<simpara>Browse <link xl:href="http://help.nvx.com/">http://help.nvx.com/</link></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">IT Infrastructure Services</emphasis> &#8594; <emphasis role="strong">Network Connectivity</emphasis> &#8594; <emphasis role="strong">Request Now</emphasis></simpara>
</listitem>
<listitem>
<simpara>Category &#8594; <emphasis role="strong">Modify Network Security Rule</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>Describe the new host/ports to access</simpara>
</listitem>
<listitem>
<simpara>Give detailed information</simpara>
<itemizedlist>
<listitem>
<simpara>Login : SVC-FR-VCRNSBPMFACT</simpara>
</listitem>
<listitem>
<simpara>PC : LFR018678 / 10.69.240.109</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</section>
<section xml:id="_ldap_account_manager_lam">
<title>LDAP Account Manager (lam)</title>
<simpara>Choose the service <emphasis role="strong">lam</emphasis> on your production line :</simpara>
<simpara><link xl:href="https://bpmfactory.s2-eu.nvx.com/lam/templates/lists/list.php?type=user">https://bpmfactory.s2-eu.nvx.com/lam/templates/lists/list.php?type=user</link></simpara>
<itemizedlist>
<title>Add every user of your project to grant him access to your CI PF :</title>
<listitem>
<simpara><emphasis role="strong">New user</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">First name</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Last name</emphasis> in uppercase</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Email adress</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Unix</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">User name</emphasis> : 8 char max, confirm with the person that it is his CORP login, else change</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Primary group</emphasis> : users</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">Save</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section xml:id="_mailing_list">
<title>Mailing list</title>
<itemizedlist>
<title>Follow these steps if and when you need to create a mailing list :</title>
<listitem>
<simpara>Browser here : <link xl:href="http://help.nvx.com/">http://help.nvx.com/</link></simpara>
</listitem>
<listitem>
<simpara>Under section <emphasis role="strong">Popular Requests</emphasis> click on <emphasis role="strong">(Form) Request for new distribution list</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Expand the <emphasis role="strong">Instructions</emphasis> section and fill all fields</simpara>
<itemizedlist>
<listitem>
<simpara>the name you provide will have .<link xl:href="mailto:fr@nvx.com">fr@nvx.com</link> appended</simpara>
</listitem>
<listitem>
<simpara>for example, if you want a webMethods list for ADM, you can ask a list named "webmethods.adm" and the mailing list will be <link xl:href="mailto:webmethods.adm.fr@nvx.com">webmethods.adm.fr@nvx.com</link></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis></simpara>
</listitem>
<listitem>
<simpara>When created, you can administer it here : <link xl:href="https://corporatedirectory.nvx.com">https://corporatedirectory.nvx.com</link></simpara>
<itemizedlist>
<listitem>
<simpara>Section <emphasis role="strong">My Distribution Lists</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_fusionforge">
<title>FusionForge</title>
<note>
<simpara>Official documentation is here : <link xl:href="https://km3.nvx.com/book/1071769">https://km3.nvx.com/book/1071769</link></simpara>
</note>
<simpara>Choose the service "FusionForge" on your production line :
<link xl:href="https://bpmfactory.s2-eu.nvx.com/fusionforge/">https://bpmfactory.s2-eu.nvx.com/fusionforge/</link></simpara>
<section xml:id="_add_admin_rights">
<title>Add admin rights</title>
<note>
<simpara>By default, only the PL owner has admin rights (create project, create trackers).</simpara>
</note>
<simpara>Select <emphasis role="strong">Site Admin</emphasis>, section <emphasis role="strong">Global roles and permissions</emphasis> &#8594; <emphasis role="strong">Forge administrators</emphasis> &#8594; <emphasis role="strong">Edit Role</emphasis></simpara>
<simpara>Add CORP login next to <emphasis role="strong">Add User</emphasis> and click it.</simpara>
<simpara>The user should have admin rights right away, thus being able to see the <emphasis role="strong">Site Admin</emphasis> section.</simpara>
</section>
<section xml:id="_create_project">
<title>Create project</title>
<simpara>In the <emphasis role="strong">Site Admin</emphasis> tab, section <emphasis role="strong">Project Maintenance</emphasis>, click on the link <emphasis role="strong">Register New Project</emphasis>.</simpara>
<simpara>Fill the required fields.</simpara>
<simpara>Now that the project is created, you can access it by going on the <emphasis role="strong">Projects</emphasis> tab, then <emphasis role="strong">Project List</emphasis> and finally clicking on the project name.</simpara>
</section>
<section xml:id="_create_tracker">
<title>Create tracker</title>
<simpara>On the project homepage, click on  <emphasis role="strong">Tracker</emphasis> &#8594; <emphasis role="strong">Administration</emphasis>.</simpara>
<simpara>Set name "TASKS" and a description, then hit <emphasis role="strong">Submit</emphasis>.</simpara>
</section>
<section xml:id="_add_users">
<title>Add users</title>
<warning>
<simpara>The user must have connected at least once on FusionForge to be available.</simpara>
</warning>
<simpara>To add access to users, on the project homepage, click on <emphasis role="strong">Admin</emphasis>, then <emphasis role="strong">Users and permissions</emphasis>.</simpara>
<itemizedlist>
<title>Two options :</title>
<listitem>
<simpara>You know the CORP login, then you can put it in the box</simpara>
</listitem>
<listitem>
<simpara>You don&#8217;t, then click on <emphasis role="strong">Add Users From List</emphasis>, then the first letter of the family name, then the user</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_change_your_name">
<title>Change your name</title>
<itemizedlist>
<title>Your name can be "Forge Admin" at PL reception, here is how to change it :</title>
<listitem>
<simpara>Click on <emphasis role="strong">My Page</emphasis> &#8594; Tab <emphasis role="strong">My Account</emphasis></simpara>
</listitem>
<listitem>
<simpara>Change your <emphasis role="strong">First Name</emphasis> and <emphasis role="strong">Last Name</emphasis></simpara>
</listitem>
<listitem>
<simpara>Hit save</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_gerrit">
<title>Gerrit</title>
<simpara>Choose the service <emphasis role="strong">Gerrit</emphasis> on your production line : <link xl:href="https://bpmfactory.s2-eu.nvx.com/gerrit">https://bpmfactory.s2-eu.nvx.com/gerrit</link></simpara>
<section xml:id="_initialization">
<title>Initialization</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<section xml:id="_permissions">
<title>Permissions</title>
<section xml:id="_jenkins_user_push">
<title>Jenkins user push</title>
<itemizedlist>
<listitem>
<simpara>Click on <emphasis role="strong">People</emphasis> &#8594; <emphasis role="strong">List Groups</emphasis> &#8594; <emphasis role="strong">Non-interactive Users</emphasis></simpara>
</listitem>
<listitem>
<simpara>Add Jenkins (your technical account) in the list</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_deleting_tags">
<title>Deleting tags</title>
<itemizedlist>
<listitem>
<simpara>Click on <emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">List</emphasis> &#8594; <guibutton>All-projects</guibutton> &#8594; section <emphasis role="strong">Access</emphasis> &#8594; <emphasis role="strong">Edit</emphasis></simpara>
</listitem>
<listitem>
<simpara>Under <guibutton>Reference: refs/tags/*</guibutton></simpara>
<itemizedlist>
<listitem>
<simpara>Click on <guibutton>Add Permission&#8230;&#8203;</guibutton> and select <emphasis role="strong">Push</emphasis></simpara>
</listitem>
<listitem>
<simpara>Select group <emphasis role="strong">Administrator</emphasis> and click <emphasis role="strong">Force Push</emphasis></simpara>
</listitem>
<listitem>
<simpara>Save Changes</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>Now you can delete tags from your projects, for ex :</simpara>
<literallayout class="monospaced">git push --force --delete origin cg-wm-1.17.6</literallayout>
</section>
</section>
<section xml:id="_verified_status">
<title>Verified status</title>
<itemizedlist>
<listitem>
<simpara>Click on <emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">List</emphasis> &#8594; <guibutton>All-Projects</guibutton> &#8594; section <emphasis role="strong">General</emphasis> &#8594; <emphasis role="strong">Edit Config</emphasis></simpara>
</listitem>
<listitem>
<simpara>Add this</simpara>
<literallayout class="monospaced">[label "Verified"]
   function = MaxWithBlock
   value = -1 Fails
   value =  0 No score
   value = +1 Verified</literallayout>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">Save</emphasis>, then <emphasis role="strong">Close</emphasis></simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">Publish Edit</emphasis>, then <emphasis role="strong">Publish</emphasis>, <guibutton>Code-Review+2</guibutton>, <emphasis role="strong">Submit</emphasis></simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">List</emphasis> &#8594; <guibutton>All-Projects</guibutton> &#8594; <emphasis role="strong">Access</emphasis> &#8594; <emphasis role="strong">Edit</emphasis></simpara>
</listitem>
<listitem>
<simpara>Under <guibutton>Reference:	refs/heads/*</guibutton></simpara>
<itemizedlist>
<listitem>
<simpara>Click on <guibutton>Add Permission&#8230;&#8203;</guibutton> and select <emphasis role="strong">Label Verified</emphasis></simpara>
</listitem>
<listitem>
<simpara>Select group <emphasis role="strong">Administrator</emphasis></simpara>
</listitem>
<listitem>
<simpara>Select group <guibutton>Non-Interactive Users</guibutton></simpara>
</listitem>
<listitem>
<simpara>Save Changes</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_fast_forward">
<title>Fast Forward</title>
<simpara>By default, when projet submissions are not fast forward, final submitting a change will create a merge commit. The history is potentially doubled.</simpara>
<itemizedlist>
<listitem>
<simpara>Click on <emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">List</emphasis> &#8594; <guibutton>All-Projects</guibutton> &#8594; <emphasis role="strong">General</emphasis></simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Submit Type</emphasis>, select <emphasis role="strong">Rebase if Necessary</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="_user_preferences">
<title>User preferences</title>
<simpara>Click on  <emphasis role="strong">YourName</emphasis> &#8594; <emphasis role="strong">Settings</emphasis> &#8594; <emphasis role="strong">Diff Preferences</emphasis> and set <emphasis role="strong">columns = 120</emphasis>
(you will probably have to paste it due to a GUI bug)</simpara>
</section>
<section xml:id="_project_creation">
<title>Project creation</title>
<simpara>Create your GIT project by clicking on <emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">Create New Project</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>Project Name = <emphasis role="strong">cg-wm</emphasis></simpara>
</listitem>
<listitem>
<simpara>Rights Inherit From = <emphasis role="strong">All-Projects</emphasis></simpara>
</listitem>
<listitem>
<simpara>Check that it has inherited correctly "Rebase if necessary", else change and save</simpara>
</listitem>
</itemizedlist>
<section xml:id="_project_git_address">
<title>Project git address</title>
<simpara>The git is visible in <emphasis role="strong">Projects</emphasis> &#8594; <guibutton>(gitweb)</guibutton>.</simpara>
<simpara>Something like :</simpara>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://cric.pl.s2-eu.nvx.com/gerrit/cg-wm.git">https://cric.pl.s2-eu.nvx.com/gerrit/cg-wm.git</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://cric.pl.s2-eu.nvx.com/gerrit/cg-tibco.git">https://cric.pl.s2-eu.nvx.com/gerrit/cg-tibco.git</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://cric.pl.s2-eu.nvx.com/gerrit/cg-talend.git">https://cric.pl.s2-eu.nvx.com/gerrit/cg-talend.git</link></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_users_groups_creation">
<title>Users groups creation</title>
<simpara>For each project, create a reviewer list and a validator list.</simpara>
<itemizedlist>
<listitem>
<simpara>Go to <emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">Create New Group</emphasis></simpara>
</listitem>
<listitem>
<simpara>Reviewers list</simpara>
<itemizedlist>
<listitem>
<simpara>Give a name, for example <guibutton>dge-reviewers</guibutton></simpara>
</listitem>
<listitem>
<simpara>Add every developers / primary reviewers on the project</simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">General</emphasis></simpara>
</listitem>
<listitem>
<simpara>Description = Reviewers (first level : +1)</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save Description</emphasis></simpara>
</listitem>
<listitem>
<simpara>Check <guibutton>Make group visible to all registered users.</guibutton></simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save Group Options</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Validators list</simpara>
<itemizedlist>
<listitem>
<simpara>Give a name for example <guibutton>dge-validators</guibutton></simpara>
</listitem>
<listitem>
<simpara>Add technical responsible and a backup</simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">General</emphasis></simpara>
</listitem>
<listitem>
<simpara>Description = "Validators (level 2 : +2)"</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save Description</emphasis></simpara>
</listitem>
<listitem>
<simpara>check <guibutton>Make group visible to all registered users.</guibutton></simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save Group Options</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</section>
<section xml:id="_jenkins">
<title>Jenkins</title>
<section xml:id="_plugins_installation">
<title>Plugins installation</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Go to <emphasis role="strong">Jenkins</emphasis> &#8594; <emphasis role="strong">Administration Jenkins</emphasis> &#8594; <emphasis role="strong">Gestion des plugins</emphasis></simpara>
</listitem>
<listitem>
<simpara>Update all plugins which have an update available</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Disponibles</emphasis> (=available) and install :</simpara>
<itemizedlist>
<listitem>
<simpara>Pipeline Maven Integration</simpara>
</listitem>
<listitem>
<simpara>Throttle Concurrent Builds Plug-in</simpara>
<itemizedlist>
<listitem>
<simpara>To be able to force non concurrent builds</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Xvnc</simpara>
<itemizedlist>
<listitem>
<simpara>To have a virtual screen if needed in tests</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Naginator</simpara>
<itemizedlist>
<listitem>
<simpara>For retry on failure</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Gerrit Trigger</simpara>
<itemizedlist>
<listitem>
<simpara>To launch job on gerrit update</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>HTML Publisher plugin</simpara>
<itemizedlist>
<listitem>
<simpara>To have the <emphasis role="strong">Maven Reporting</emphasis> link when "maven site" is launched</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Monitoring</simpara>
<itemizedlist>
<listitem>
<simpara>To see nice health data of Jenkins on <link xl:href="https://bpmfactory.s2-eu.nvx.com/jenkins/monitoring">https://bpmfactory.s2-eu.nvx.com/jenkins/monitoring</link></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>JUnit Attachments</simpara>
<itemizedlist>
<listitem>
<simpara>for enhanced job reporting</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Logstash</simpara>
<itemizedlist>
<listitem>
<simpara>To send jenkins jobs output to logstash then elastic</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>diskcheck</simpara>
<itemizedlist>
<listitem>
<simpara>Check filesystem space on slave before a build</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>disk-usage</simpara>
<itemizedlist>
<listitem>
<simpara>Show disk usage per build, configuration in <emphasis role="strong">Administrer Jenkins</emphasis> &#8594; <guibutton>Configurer le système</guibutton> &#8594; <emphasis role="strong">Utilisation du disque</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>AnsiColor</simpara>
<itemizedlist>
<listitem>
<simpara>To allow colors in build logs</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Simple Theme Plugin</simpara>
<itemizedlist>
<listitem>
<simpara>to change Jenkins basic theme</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_change_theme">
<title>Change Theme</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Have the Simple Theme Plugin installed</simpara>
</listitem>
<listitem>
<simpara>Navigate <emphasis role="strong">Administrer Jenkins</emphasis> &#8594; <guibutton>Configurer le système</guibutton> &#8594; <emphasis role="strong">Theme</emphasis> section</simpara>
<itemizedlist>
<listitem>
<simpara>URL of theme CSS = <link xl:href="https://cdn.rawgit.com/afonsof/jenkins-material-theme/gh-pages/dist/material-cyan.css">https://cdn.rawgit.com/afonsof/jenkins-material-theme/gh-pages/dist/material-cyan.css</link></simpara>
<itemizedlist>
<listitem>
<simpara>see the author&#8217;s page for other colors : <link xl:href="http://afonsof.com/jenkins-material-theme/">http://afonsof.com/jenkins-material-theme/</link></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Save</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_gerrit_trigger_configuration">
<title>Gerrit Trigger Configuration</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<simpara>On Jenkins :</simpara>
<itemizedlist>
<listitem>
<simpara>Create the console-master job if not already existing</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>Create a new freestyle job.</simpara>
</listitem>
<listitem>
<simpara>Name it console-master</simpara>
</listitem>
<listitem>
<simpara>General</simpara>
</listitem>
<listitem>
<simpara>&#10003; <guibutton>Restreindre où le projet peut être exécuté</guibutton></simpara>
<itemizedlist>
<listitem>
<simpara>master</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Put this <emphasis role="strong">Build</emphasis> &#8594; <guibutton>Ajouter une étape au build</guibutton> &#8594; <guibutton>Exécuter un script shell</guibutton> &#8594; paste this and save :</simpara>
<literallayout class="monospaced">ssh-keygen -y -f /root/.ssh/id_rsa &gt; /root/.ssh/id_rsa.pub
ls -lart /root/.ssh/
more /root/.ssh/id_rsa.pub</literallayout>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Add 1 executor on the master node</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Home</emphasis> &#8594; <guibutton>État du lanceur de compilations</guibutton> &#8594; <guibutton>maître</guibutton> &#8594; <emphasis role="strong">Configurer</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Execute the console-master</simpara>
</listitem>
<listitem>
<simpara>Keep track of what the execution gave for later Gerrit configuration, example :</simpara>
<literallayout class="monospaced">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKGER5oLwkNhcCYtTzmUQooA+1mdrjIGi84AVsOHyNpsMqFBhkpxfImvopvKlYiztXUA15dwwDsPWq1tUcy/4NWqKnMTQA57xxxT2r8suF/DVlH6fNn8T73mGz9+kT77FXHuaMfmDTqrwPngUYQMm2Y9kTjGhIcH/jseq6jCUawITAOs/6EUbs7jtJ/S+jMb6Ed60S7S/nR3IzQwVrXMiQjDdFsL8RWEBQ54T4cNia/HMI8MK7mEEF5K008g4Ru3Bidk+VSisPUYFPmNc/tE12RyAjvkcwWxrYqFEB5h6RlS0yWXAjCUzjv8T0ov4Wus+ZqNgqUMYtBBf+zQvQC1ub</literallayout>
</listitem>
<listitem>
<simpara>When finished, remove the executor from master node</simpara>
</listitem>
<listitem>
<simpara>Create a local trigger server</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Home</emphasis> &#8594; <emphasis role="strong">Administrer Jenkins</emphasis> &#8594; <emphasis role="strong">Gerrit Trigger</emphasis> &#8594; <emphasis role="strong">Add New Server</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>Gerrit Connection Setting</simpara>
<itemizedlist>
<listitem>
<simpara>Name = local_server</simpara>
</listitem>
<listitem>
<simpara>Hostname = gerrit</simpara>
</listitem>
<listitem>
<simpara>Frontend URL = <link xl:href="http://gerrit/">http://gerrit/</link></simpara>
</listitem>
<listitem>
<simpara>SSH Port = 29418</simpara>
</listitem>
<listitem>
<simpara>Username = svc-fr-bpmfact</simpara>
</listitem>
<listitem>
<simpara>SSH Keyfile = /root/.ssh/id_rsa</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Gerrit Reporting Values</simpara>
<itemizedlist>
<listitem>
<simpara>Verify = &lt;vide&gt;, 1, -1, -1, -1</simpara>
</listitem>
<listitem>
<simpara>Code Review = &lt;vide&gt;, 1, -1, -1, -1</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Gerrit Verified Commandes</simpara>
<itemizedlist>
<listitem>
<simpara>Started = vide</simpara>
</listitem>
<listitem>
<simpara>Successful =</simpara>
<literallayout class="monospaced">gerrit review &lt;CHANGE&gt;,&lt;PATCHSET&gt; --message 'Build Successful (◕‿◕) &lt;BUILDS_STATS&gt;' --verified &lt;VERIFIED&gt;</literallayout>
</listitem>
<listitem>
<simpara>Failed =</simpara>
<literallayout class="monospaced">gerrit review &lt;CHANGE&gt;,&lt;PATCHSET&gt; --message 'Build Failed (ಠ_ಠ) &lt;BUILDS_STATS&gt;' --verified &lt;VERIFIED&gt;</literallayout>
</listitem>
<listitem>
<simpara>Unstable =</simpara>
<literallayout class="monospaced">gerrit review &lt;CHANGE&gt;,&lt;PATCHSET&gt; --message 'Build Unstable ( ͠° ͟ʖ ͡°)  &lt;BUILDS_STATS&gt;' --verified &lt;VERIFIED&gt;</literallayout>
</listitem>
<listitem>
<simpara>Not Built =</simpara>
<literallayout class="monospaced">gerrit review &lt;CHANGE&gt;,&lt;PATCHSET&gt; --message 'No Builds Executed (╯︵╰,)  &lt;BUILDS_STATS&gt;' --verified &lt;VERIFIED&gt;</literallayout>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Save</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>On Gerrit :</simpara>
<itemizedlist>
<listitem>
<simpara>Connect with the technical user (svc-fr-bpmfact / Bpm-fact0ry)</simpara>
<itemizedlist>
<listitem>
<simpara>You may have to use a secondary browser, since authentication is very persistent on Gerrit</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click on the user top right &#8594; <emphasis role="strong">Settings</emphasis> &#8594; <emphasis role="strong">SSH Public Keys</emphasis> &#8594; <guibutton>Add Key&#8230;&#8203;</guibutton></simpara>
</listitem>
<listitem>
<simpara>Add the public key content from Jenkins server (the one asked to be kept track earlier), starting with <emphasis role="strong">ssh-rsa</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara>On Jenkins :</simpara>
<itemizedlist>
<listitem>
<simpara>Test the earlier configured connection of the trigger with <emphasis role="strong">Test Connection</emphasis> while editing local_server</simpara>
</listitem>
<listitem>
<simpara>Restart jenkins with : <link xl:href="https://bpmfactory.s2-eu.nvx.com/jenkins/safeRestart">https://bpmfactory.s2-eu.nvx.com/jenkins/safeRestart</link></simpara>
</listitem>
<listitem>
<simpara>The Gerrit trigger should be up and running</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_administration_2">
<title>Administration</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<section xml:id="_overall_configuration">
<title>Overall configuration</title>
<simpara>Connect to Jenkins configuration page : <link xl:href="https://bpmfactory.s2-eu.nvx.com/jenkins/configure">https://bpmfactory.s2-eu.nvx.com/jenkins/configure</link></simpara>
<variablelist>
<varlistentry>
<term>Propriétés globales</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>JAVA_HOME = /usr/</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Jenkins Location</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>Adresse email de l&#8217;administrateur système = <link xl:href="mailto:xxxxx@nvx.com">xxxxx@nvx.com</link></simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Extended E-mail Notification</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>SMTP server = smtp.nvx.fr</simpara>
</listitem>
<listitem>
<simpara>Default user E-mail suffix = @nvx.com</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Notification par email</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>Serveur SMTP = smtp.nvx.fr</simpara>
</listitem>
<listitem>
<simpara>Suffixe par défaut des emails des utilisateurs = @nvx.com</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<simpara>Save.</simpara>
</section>
<section xml:id="_tools_configuration">
<title>Tools configuration</title>
<simpara>Connect to Jenkins tools configuration page : <link xl:href="https://bpmfactory.s2-eu.nvx.com/jenkins/configureTools/">https://bpmfactory.s2-eu.nvx.com/jenkins/configureTools/</link></simpara>
<variablelist>
<varlistentry>
<term>Maven</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>Nom = Maven 3.5</simpara>
</listitem>
<listitem>
<simpara>Version = 3.5.2</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Logstash Plugin</term>
<listitem>
<itemizedlist>
<listitem>
<simpara>Indexer type = ELASTICSEARCH</simpara>
</listitem>
<listitem>
<simpara>Host name = <link xl:href="http://frpardge.corp.nvx.com">http://frpardge.corp.nvx.com</link></simpara>
</listitem>
<listitem>
<simpara>Port = 9200</simpara>
</listitem>
<listitem>
<simpara>Key = /jenkins/builds</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
<simpara>Save.</simpara>
</section>
</section>
<section xml:id="_allow_css_on_published_html">
<title>Allow CSS on published HTML</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Create a pipeline "css-support"</simpara>
</listitem>
<listitem>
<simpara>Build Triggers</simpara>
<itemizedlist>
<listitem>
<simpara>Construire périodiquement</simpara>
<itemizedlist>
<listitem>
<simpara>Planning = 0 10,15,20 * * *</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Pipeline</simpara>
<literallayout class="monospaced">println(System.getProperty("hudson.model.DirectoryBrowserSupport.CSP"))
System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "")
println(System.getProperty("hudson.model.DirectoryBrowserSupport.CSP"))</literallayout>
<itemizedlist>
<listitem>
<simpara>Uncheck <emphasis role="strong">Use Groovy Sandbox</emphasis> and save</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_sonarqube_token">
<title>SonarQube token</title>
<simpara>To be able to upload quality results to SonarQube, you have to create a token.</simpara>
<simpara>Go to SonarQube application on the PL &#8594; <emphasis role="strong">YourName</emphasis> &#8594; <emphasis role="strong">My Account</emphasis> &#8594; <emphasis role="strong">Security</emphasis> &#8594; Name = Jenkins &#8594; <emphasis role="strong">Generate</emphasis></simpara>
<simpara>Now maven can upload results to SonarQube with something like :</simpara>
<literallayout class="monospaced">mvn sonar:sonar -Dsonar.login=ab7451586619e21d0e2bb50389899ce3595e3 -Dsonar.host.url=http://sonarqube:9000/sonarqube</literallayout>
</section>
<section xml:id="_ssh_key_on_remote_server">
<title>ssh key on remote server</title>
<note>
<simpara>This has to be done only for a new remote server</simpara>
</note>
<simpara>If you have a remote server where you deploy your artifacts for further developments or tests :
* note the result of the slavePrep.sh script under <emphasis role="strong">Here is this server&#8217;s ssh public key</emphasis>. Here is an example</simpara>
<literallayout class="monospaced">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDZRLfTsI+cTRjbhYhnDvIOI3lsexMiJpwcBmeuJrISnEdh1LRPlviQjtI1h7NCihejVIPgvzyMVn3tMLsvABBXLTbVFIetOudpJn+8isnYAWWaaqX2fce/BqjLC26ygR4n25sqTO/GE9AhV5uBPbYTr4HCrH9Wzd8nU13DXm8COhxUKh1+Uwm47KB11fVH/boIUygocIRu1FXS9TJyMU0qFf3GGmDXs56VTe4ZQtPBHJ1klRXQQc6UIhTbdLpedo4Khvzr7TpdVZg13qXZt35/t7Gu4lbImHSlN64TKhaxAYgCPjYKgl9tAWJpEkk3WzXghohLivIQPInu5h3uvckH jenkins@b43496a2520e</literallayout>
<itemizedlist>
<listitem>
<simpara>Connect on the remote server via SSH</simpara>
</listitem>
<listitem>
<simpara>add the key to <emphasis role="strong">~/.ssh/authorized_keys</emphasis> file</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_pipelines_creations">
<title>Pipelines creations</title>
<section xml:id="_the_review_pipeline">
<title>The Review pipeline</title>
<simpara>This will be the review pipeline with steps from checkout to quality check. This pipeline is a "pipeline as code".</simpara>
<simpara>Go to Jenkins home page :</simpara>
<simpara><link xl:href="https://bpmfactory.s2-eu.nvx.com/jenkins">https://bpmfactory.s2-eu.nvx.com/jenkins</link></simpara>
<itemizedlist>
<listitem>
<simpara>Click <emphasis role="strong">New Item</emphasis></simpara>
</listitem>
<listitem>
<simpara>Choose a name : CG-WM_P1_Review</simpara>
</listitem>
<listitem>
<simpara>Choose Pipeline type</simpara>
</listitem>
</itemizedlist>
<section xml:id="_general">
<title>General</title>
<itemizedlist>
<listitem>
<simpara>Description = This is the review pipeline fired by Gerrit on non yet validated push</simpara>
</listitem>
<listitem>
<simpara>Check <emphasis role="strong">Supprimer les anciens builds</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>Strategy = Log Rotation</simpara>
</listitem>
<listitem>
<simpara>Nombre de builds à conserver = 10</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_build_triggers">
<title>Build Triggers</title>
<warning>
<simpara>In the field <emphasis role="strong">Choose a Server</emphasis>, <emphasis role="strong">Any Server</emphasis> won&#8217;t work</simpara>
</warning>
<itemizedlist>
<listitem>
<simpara>Choose <emphasis role="strong">Gerrit event</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara>Gerrit Trigger</simpara>
<itemizedlist>
<listitem>
<simpara>Choose a Server = local_server</simpara>
</listitem>
<listitem>
<simpara>Trigger on = Patchset Created</simpara>
</listitem>
<listitem>
<simpara>Gerrit Project</simpara>
<itemizedlist>
<listitem>
<simpara>Type = Plain</simpara>
</listitem>
<listitem>
<simpara>Pattern = cg-wm</simpara>
</listitem>
<listitem>
<simpara>Branches</simpara>
<itemizedlist>
<listitem>
<simpara>Type = Plain</simpara>
</listitem>
<listitem>
<simpara>Pattern = master</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_advanced_project_options">
<title>Advanced Project Options</title>
<simpara>None.</simpara>
</section>
<section xml:id="_pipeline">
<title>Pipeline</title>
<itemizedlist>
<listitem>
<simpara>Definition = Pipeline script</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Pipeline content to copy/paste</title>
<para>
<programlisting language="groovy" linenumbering="unnumbered">#!groovy

properties([
	buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '7')),
	[$class: 'ThrottleJobProperty',
		categories: [],
		limitOneJobWithMatchingParams: false,
		maxConcurrentPerNode: 0,
		maxConcurrentTotal: 0,
		paramsToUseForLimit: '',
		throttleEnabled: false,
		throttleOption: 'project'],
	pipelineTriggers([
		gerrit(customUrl: '',
			gerritProjects: [[branches: [[compareType: 'PLAIN', pattern: 'master']],
			compareType: 'PLAIN', disableStrictForbiddenFileVerification: false, pattern: 'cg-wm']],
			serverName: 'local_server',
			triggerOnEvents: [patchsetCreated(excludeDrafts: false, excludeNoCodeChange: false, excludeTrivialRebase: false)]
		)
	])
])

node {
	timeout(30) {
	    try {
	        stage('Checkout') {
	        	cleanWs()   // requires workspace cleanup plugin to be installed
	            echo "**** Starting checkout of patchset ${GERRIT_PATCHSET_NUMBER} on change number ${GERRIT_CHANGE_NUMBER}"
	            git username: 'svc-fr-cric', password: 'Bocibo15', url: 'https://cric.pl.s2-eu.nvx.com/gerrit/cg-wm.git'
	            def changeBranch = "change-${GERRIT_CHANGE_NUMBER}-${GERRIT_PATCHSET_NUMBER}"
	            sh "git fetch origin ${GERRIT_REFSPEC}:${changeBranch}"
	            sh "git checkout ${changeBranch}"

	            def v = version(readFile('pom.xml'))
	            echo "Building version ${v}"
	        }
	        stage('Compilation') {
	        	//slaves are wiped out randomly, so we prepare them on each execution
	            sh '$WORKSPACE/src/scripts/slavePrep.sh'

	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
	            	//clean to deploy libs to local maven repository
	                sh "mvn clean dependency:purge-local-repository"
	                //The assembly is postponed : it needs some further generated PDF
	                sh "mvn install verify -DskipTests -Dassembly.skipAssembly=true"
	            }
	        }
			stage('Verification'){
	        	parallel (
					"Unit Tests" : {
						wrap([$class: 'Xvnc', takeScreenshot: false, useXauthority: true]) {
				            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
			                    sh "mvn test -s cg-settings.xml -Dcheckstyle.skip=true"
			                    //Maven auto reports JUnit surefire results
				            }
				        }
				     },
					"Documentation" : {
						sh '$WORKSPACE/src/scripts/asciidocOnlyModified.sh'
						//get history from git to asciidoc documentation
			            sh '$WORKSPACE/src/scripts/asciidocHistory.sh $WORKSPACE'
						withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
							//validate produces the date for PDF
							sh "mvn validate asciidoctor:process-asciidoc antrun:run@pdfsAddVersion -s cg-settings.xml -Dcheckstyle.skip=true"
						}
						archiveArtifacts artifacts: '**/*.pdf', excludes: '**/test*.pdf', allowEmptyArchive: true
					}
	        	)
	        }
	        stage('Integration Tests'){
	        	//integration tests have to be after documentation for the tracker zip to include the user manual
				wrap([$class: 'Xvnc', takeScreenshot: false, useXauthority: true]) {
		            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
		                try{
							//we do not install, since these suspicious jars could be misused by other projects
		                    sh "mvn verify failsafe:verify -Dcg.ut.skip=true -Dcheckstyle.skip=true"
		                } finally {
		                    //Maven does not auto report JUnit failsafe results
	                        junit '**/target/failsafe-reports/*.xml'
	                    }
		            }
	            }
			}
			stage('Quality Gate') {
	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
	                sh "mvn sonar:sonar -Dsonar.login=0d1356516289799b179c6c7f851c9d4464ab04e2 -Dsonar.host.url=http://sonarqube:9000/sonarqube"
	            }
	            sh '$WORKSPACE/src/scripts/sonarStatus.sh'
	        }
	        stage('Assembly') {
	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
	                sh "mvn install -DskipTests -Dcheckstyle.skip=true"
	                sh "mvn dependency:purge-local-repository"
	            }
	            archiveArtifacts artifacts: '**/target/*.zip'
	        }
	    } catch (any) {
	        step([
	            $class: 'Mailer', notifyEveryUnstableBuild: true,
	            recipients: emailextrecipients([[$class: 'CulpritsRecipientProvider'],
	            [$class: 'RequesterRecipientProvider']])
	            ])
	        currentBuild.result = 'FAILURE'
	    }
	}//timeout
	logstashSend failBuild: false, maxLines: 1000
}//node

@NonCPS
def version(text) {
    def matcher = text =~ '&lt;version&gt;(.+)&lt;/version&gt;'
    matcher ? matcher[0][1] : null
}</programlisting>
</para>
</formalpara>
</section>
</section>
<section xml:id="_the_deploy_pipeline">
<title>The Deploy pipeline</title>
<simpara>This will be the main pipeline with everything from checkout to deployment. This pipeline is a “pipeline as code”.</simpara>
<simpara>Go to Jenkins home page :</simpara>
<simpara><link xl:href="https://bpmfactory.s2-eu.nvx.com/jenkins">https://bpmfactory.s2-eu.nvx.com/jenkins</link></simpara>
<itemizedlist>
<listitem>
<simpara>Click <emphasis role="strong">New Item</emphasis></simpara>
</listitem>
<listitem>
<simpara>Choose a name : CG-WM_P2_Deploy</simpara>
</listitem>
<listitem>
<simpara>Choose <emphasis role="strong">Pipeline</emphasis> type</simpara>
</listitem>
</itemizedlist>
<section xml:id="_general_2">
<title>General</title>
<itemizedlist>
<listitem>
<simpara>Check <emphasis role="strong">Supprimer les anciens builds</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>Strategy = Log Rotation</simpara>
</listitem>
<listitem>
<simpara>Nombre de builds à conserver = 10</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_build_triggers_2">
<title>Build Triggers</title>
<itemizedlist>
<listitem>
<simpara>Choose « Scrutation de l&#8217;outil de gestion de version »</simpara>
</listitem>
<listitem>
<simpara>Planning = H * * * *</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_advanced_project_options_2">
<title>Advanced Project Options</title>
<simpara>None.</simpara>
</section>
<section xml:id="_pipeline_2">
<title>Pipeline</title>
<itemizedlist mark="none">
<listitem>
<simpara>Definition = Pipeline script from SCM</simpara>
</listitem>
<listitem>
<simpara>SCM = Git</simpara>
<itemizedlist>
<listitem>
<simpara>Repositories</simpara>
<itemizedlist>
<listitem>
<simpara>Repository URL = <link xl:href="http://bpmfactory.s2-eu.nvx.com/gerrit/p/cg-wm.git">http://bpmfactory.s2-eu.nvx.com/gerrit/p/cg-wm.git</link></simpara>
</listitem>
<listitem>
<simpara>Credentials = svc-fr-bpmfact / Bpm-fact0ry</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Branches to build : */master</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Script Path = Jenkinsfile-2-deploy-to-dev</simpara>
</listitem>
<listitem>
<simpara>&#10003; Lightweight checkout</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Pipeline content (for information)</title>
<para>
<programlisting language="groovy" linenumbering="unnumbered">#!groovy
node {
	timeout(60) {
	    try {
			stage('Checkout') {
				cleanWs()   // requires workspace cleanup plugin to be installed
				retry(3) {
					checkout scm
				}
				def v = version(readFile('pom.xml'))
				echo "Building version ${v}"
			}
	        stage('Compilation') {
				//slaves are wiped out randomly, so we prepare them on each execution
				sh '$WORKSPACE/src/scripts/slavePrep.sh'
	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
	                //used to deploy libs to local maven repository
	                sh "mvn clean"
	                //The assembly is postponed : it needs some further generated PDF
	                sh "mvn install -DskipTests -Dassembly.skipAssembly=true"
	            }
	        }
			stage('Unit Tests') {
			    wrap([$class: 'Xvnc', takeScreenshot: false, useXauthority: true]) {
		            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
	                    sh "mvn test -Dcheckstyle.skip=true"
	                    //Maven auto reports JUnit surefire results
		            }
	            }
	        }
			stage('Documentation') {
				//get history from git to asciidoc documentation
	            sh '$WORKSPACE/src/scripts/asciidocHistory.sh $WORKSPACE'
				withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
					//validate produces the date for PDF
					//javadoc:aggregate is CPU intensive, we don't parallelize for now
					sh "mvn validate asciidoctor:process-asciidoc antrun:run@pdfsAddVersion javadoc:aggregate -Dcheckstyle.skip=true"
					sh "mvn javadoc:jar -pl cg-utils -Dcheckstyle.skip=true"
				}
				step([$class: 'JavadocArchiver', javadocDir: 'target/site/javadoc', keepAll: true])
				archiveArtifacts artifacts: '**/*.pdf,**/*-javadoc.jar', excludes: '**/test*.pdf'
			}
			stage('Integration Tests') {
				wrap([$class: 'Xvnc', takeScreenshot: false, useXauthority: true]) {
		            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
		                try{
		                    sh "mvn verify failsafe:verify -Dcg.ut.skip=true -Dcheckstyle.skip=true"
		                } finally {
							//Maven does not auto report JUnit failsafe results
	                        junit '**/target/failsafe-reports/*.xml'
	                    }
		            }
	            }
	        }
			stage('Quality Check') {
	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
	                sh "mvn sonar:sonar -Dsonar.login=0d1356516289799b179c6c7f851c9d4464ab04e2 -Dsonar.host.url=http://sonarqube:9000/sonarqube"
	            }
	            sh '$WORKSPACE/src/scripts/sonarStatus.sh'
	        }
	        stage('Assembly') {
	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: false)]) {
	                sh "mvn install -DskipTests -Dcheckstyle.skip=true"
	            }
				//archiveArtifacts is now in "Deployment" phase since we download packages
	        }
	        stage('Publication'){
	        	parallel (
					"Deployment to Nexus and IS": {
						withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
							//sh 'mvn wagon:update-maven-3'
							sh 'mvn deploy -DskipTests -Dassembly.skipAssembly=true -Dcheckstyle.skip=true -s cg-settings.xml'
						}
						sh "ssh devops@frpardge.corp.nvx.com 'cd /opt/sagis/profiles/IS_default/bin;./restart.sh'"
						sh '$WORKSPACE/src/scripts/deployJavadoc.sh'
						sh '$WORKSPACE/src/scripts/getPackages.sh'

						//SchemaSpy must not fail the deployment so we put it after deployment
	            		sh '$WORKSPACE/src/scripts/schemaspy.sh'
						publishHTML([
							allowMissing         : false,
							alwaysLinkToLastBuild: false,
							keepAll              : true,
							reportDir            : 'target/schemaspy',
							reportFiles          : 'index.html',
							reportName           : 'DB Schema'])

						archiveArtifacts artifacts: '**/target/*.zip'
					},
					"Reporting" : {

						//Git Inspector
						sh 'mkdir target/gitinspector'
						sh 'export PYTHONIOENCODING=utf-8 ; gitinspector --format=html -rTw &gt; target/gitinspector/index.html'
						publishHTML([
							allowMissing         : false,
							alwaysLinkToLastBuild: false,
							keepAll              : true,
							reportDir            : 'target/gitinspector',
							reportFiles          : 'index.html',
							reportName           : 'Git Inspector'])

						//Maven Site
						withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
							sh 'mvn site site:stage -DskipTests -Dcheckstyle.skip=true -s cg-settings.xml'
						}
						publishHTML([
							allowMissing         : false,
							alwaysLinkToLastBuild: false,
							keepAll              : true,
							reportDir            : 'target/staging',
							reportFiles          : 'index.html',
							reportName           : 'Maven Reporting'])
					}
				)
			}
	    } catch (any) {
	        step([
	            $class: 'Mailer', notifyEveryUnstableBuild: true,
	            recipients: emailextrecipients([[$class: 'CulpritsRecipientProvider'],
	            [$class: 'RequesterRecipientProvider']])
	            ])
	        currentBuild.result = 'FAILURE'
	    }
	}//timeout
	logstashSend failBuild: false, maxLines: 1000
}//node

@NonCPS
def version(text) {
    def matcher = text =~ '&lt;version&gt;(.+)&lt;/version&gt;'
    matcher ? matcher[0][1] : null
}</programlisting>
</para>
</formalpara>
</section>
</section>
<section xml:id="_the_deploy_int_pipeline">
<title>The Deploy Int pipeline</title>
<warning>
<simpara>Describe this pipeline when stable</simpara>
</warning>
</section>
<section xml:id="_the_release_pipeline">
<title>The Release pipeline</title>
<simpara>This is the release pipeline launched manually at will when an external release is needed. This pipeline is a "pipeline as code".</simpara>
<simpara>Go to Jenkins home page :</simpara>
<simpara><link xl:href="https://bpmfactory.s2-eu.nvx.com/jenkins">https://bpmfactory.s2-eu.nvx.com/jenkins</link></simpara>
<itemizedlist>
<listitem>
<simpara>Click <emphasis role="strong">New Item</emphasis></simpara>
</listitem>
<listitem>
<simpara>Choose a name : CG-WM_P3_Release</simpara>
</listitem>
<listitem>
<simpara>Choose <emphasis role="strong">Pipeline</emphasis> type</simpara>
</listitem>
</itemizedlist>
<section xml:id="_general_3">
<title>General</title>
<itemizedlist>
<listitem>
<simpara>Check <emphasis role="strong">Ce build a des paramètres</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>Paramètre texte</simpara>
<itemizedlist>
<listitem>
<simpara>RELEASE_VERSION</simpara>
</listitem>
<listitem>
<simpara>the release version, with pattern 1.YY.MM[.increment] (ex : 1.17.5.9)</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Check <emphasis role="strong">Supprimer les anciens builds</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>Strategy = Log Rotation</simpara>
</listitem>
<listitem>
<simpara>Nombre de builds à conserver = 10</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_build_triggers_3">
<title>Build Triggers</title>
<simpara>No trigger (manual launch).</simpara>
</section>
<section xml:id="_advanced_project_options_3">
<title>Advanced Project Options</title>
<simpara>None.</simpara>
</section>
<section xml:id="_pipeline_3">
<title>Pipeline</title>
<itemizedlist mark="none">
<listitem>
<simpara>Definition = Pipeline script from SCM</simpara>
</listitem>
<listitem>
<simpara>SCM = Git</simpara>
<itemizedlist>
<listitem>
<simpara>Repositories</simpara>
<itemizedlist>
<listitem>
<simpara>Repository URL = <link xl:href="http://bpmfactory.s2-eu.nvx.com/gerrit/p/cg-wm.git">http://bpmfactory.s2-eu.nvx.com/gerrit/p/cg-wm.git</link></simpara>
</listitem>
<listitem>
<simpara>Credentials = svc-fr-bpmfact / Bpm-fact0ry</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Branches to build : */master</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Script Path = Jenkinsfile-4-release</simpara>
</listitem>
<listitem>
<simpara>&#10003; Lightweight checkout</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Pipeline content (for information)</title>
<para>
<programlisting language="groovy" linenumbering="unnumbered">#!groovy

//Release is a manual firing (and should always be)
//No need to do the whole process, trunk is always trustworthy with our setup
//Just check that the merge pipeline (DeployToDev) is successful

node {
	timeout(30) {
	    try {
			stage('Checkout') {
				cleanWs()   // requires workspace cleanup plugin to be installed
				retry(3) {
					checkout scm
				}
				echo "Releasing version $RELEASE_VERSION"
			}
			stage('Documentation') {
				//get history from git to asciidoc documentation
	            sh '$WORKSPACE/src/scripts/asciidocHistory.sh $WORKSPACE'

	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
					//to put jars in local maven repository if needed
					sh "mvn clean"
					sh "mvn versions:set -DnewVersion=$RELEASE_VERSION"
					//without this local installation, modules are searched on internet on mvn validate
					sh "mvn install -DskipTests -Dassembly.skipAssembly=true"
					//we launch some (quick) tests that contains the generation of service list for the cg-utils doc
					sh "mvn test -pl cg-utils"
					//time to launch the actual doc generation
					//validate produces the date for PDF
					sh "mvn validate asciidoctor:process-asciidoc antrun:run@pdfsAddVersion javadoc:aggregate -Dcheckstyle.skip=true"
					sh "mvn javadoc:jar -pl cg-utils -Dcheckstyle.skip=true"
				}

				step([$class: 'JavadocArchiver', javadocDir: 'target/site/javadoc', keepAll: true])
				archiveArtifacts artifacts: '**/*.pdf,**/*-javadoc.jar', excludes: '**/test*.pdf'
			}
			stage('Deployment') {
				//Deployment is after documentation because a pdf must be in the zip

				//Delete tag if this is a replayed-on-error build...

				//...locally
				sh "git tag -d cg-wm-$RELEASE_VERSION || true"

				//...remotely
				//Special characters have to be URL encoded : https://stackoverflow.com/questions/6172719/escape-character-in-git-proxy-password
				sh "git push --force --delete https://svc-fr-cric:ptTpilL5FS47RHDFV8541owV4zkbZOtVrxyqRsmGhw@cric.pl.s2-eu.nvx.com/gerrit/p/cg-wm.git cg-wm-$RELEASE_VERSION || true"

	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
					sh "mvn deploy scm:tag -s cg-settings.xml -DskipTests -Dcheckstyle.skip=true"
				}
				sh "$WORKSPACE/src/scripts/deployJavadoc.sh"
				sh "$WORKSPACE/src/scripts/getPackages.sh"
				archiveArtifacts artifacts: '**/target/*.zip'
			}
			stage('Reporting') {
	            withMaven(maven: 'Maven 3.5', mavenOpts: '-Xmx1024M', options: [artifactsPublisher(disabled: true)]) {
					sh "mvn site site:stage -DskipTests -Dcheckstyle.skip=true -s cg-settings.xml"
				}
				publishHTML([
					allowMissing         : false,
					alwaysLinkToLastBuild: false,
					keepAll              : true,
					reportDir            : 'target/staging',
					reportFiles          : 'index.html',
					reportName           : 'Maven Reporting'])
			}
	    } catch (any) {
	        step([
	            $class: 'Mailer', notifyEveryUnstableBuild: true,
	            recipients: emailextrecipients([[$class: 'CulpritsRecipientProvider'],
	            [$class: 'RequesterRecipientProvider']])
	            ])
	        currentBuild.result = 'FAILURE'
	    }
	}//timeout
	logstashSend failBuild: false, maxLines: 1000
}//node

@NonCPS
def version(text) {
    def matcher = text =~ '&lt;version&gt;(.+)&lt;/version&gt;'
    matcher ? matcher[0][1] : null
}</programlisting>
</para>
</formalpara>
</section>
</section>
</section>
<section xml:id="_troobleshooting">
<title>Troobleshooting</title>
<section xml:id="_disk_space_usage_90">
<title>Disk space usage &gt; 90 %</title>
<simpara>If the disk space usage is too high and your build fails a the start for this reason, you can purge some folders with the below actions.</simpara>
<itemizedlist>
<listitem>
<simpara>Edit the <emphasis role="strong">console</emphasis> job.</simpara>
</listitem>
<listitem>
<simpara>Put these lines and save :</simpara>
<literallayout class="monospaced">du --max-depth=1 /home/jenkins/workspace/ | sort -n -r | head -n 30
find /home/jenkins/workspace/ -maxdepth 1 -mtime +90 -type d -depth -print</literallayout>
</listitem>
<listitem>
<simpara>Launch the job</simpara>
</listitem>
<listitem>
<simpara>Following the results, do the necessary deletions</simpara>
</listitem>
<listitem>
<simpara>If there are some ws-cleanup directory, you can delete them safely :</simpara>
<literallayout class="monospaced">rm -rf /home/jenkins/workspace/\*ws-cleanup*/ ???</literallayout>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</section>
<section xml:id="_sonarqube">
<title>SonarQube</title>
<section xml:id="_quality_gates">
<title>Quality Gates</title>
<simpara>Click on <emphasis role="strong">Quality Gate</emphasis></simpara>
<simpara>Create a new one for your project and select your quality gate rules :</simpara>
<itemizedlist>
<listitem>
<simpara>Comments is less than 30 then 25</simpara>
</listitem>
<listitem>
<simpara>Coverage is less than 86 then 80</simpara>
</listitem>
<listitem>
<simpara>Maintainability Raiting is worse than A then C</simpara>
</listitem>
<listitem>
<simpara>Reliability Raiting is worse than A then C</simpara>
</listitem>
<listitem>
<simpara>Security Raiting is worse than A then C</simpara>
</listitem>
<listitem>
<simpara>Unit Test Success (%) is worse than A then C</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_update">
<title>Update</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<simpara><emphasis role="strong">Administration</emphasis> &#8594; <emphasis role="strong">System</emphasis> &#8594; <emphasis role="strong">Update Center</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>SonarJava : install or update to latest</simpara>
</listitem>
<listitem>
<simpara>Findbugs : install</simpara>
</listitem>
<listitem>
<simpara>SoftVis3D : install</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_rules_quality_profile">
<title>Rules / quality profile</title>
<section xml:id="_export">
<title>Export</title>
<itemizedlist>
<listitem>
<simpara>Navigate to <emphasis role="strong">Quality Profiles</emphasis> &#8594; <emphasis role="strong">BCT</emphasis> (or your profile) &#8594; <emphasis role="strong">Actions</emphasis> &#8594; <emphasis role="strong">Back Up</emphasis></simpara>
</listitem>
<listitem>
<simpara>This will download a XML</simpara>
</listitem>
<listitem>
<simpara>On CG-WM, the common java XML quality profile is saved here :</simpara>
<literallayout class="monospaced">src\docs\SonarQube.qualityProfile.BCT.xml</literallayout>
</listitem>
</itemizedlist>
</section>
<section xml:id="_import">
<title>Import</title>
<warning>
<simpara>for an import to be successful, SonarQube must know the rules, so SonarJava and Findbugs must be up to date</simpara>
</warning>
<itemizedlist>
<listitem>
<simpara>Navigate to <emphasis role="strong">Quality Profiles</emphasis> &#8594; dropdown menu next to <emphasis role="strong">Create</emphasis> &#8594; <emphasis role="strong">Restore Profile</emphasis></simpara>
</listitem>
<listitem>
<simpara>Provide the saved XML</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_create">
<title>Create</title>
<note>
<simpara>This has to be done only if you want to define a custom set of rules</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Choose <emphasis role="strong">Quality Profiles</emphasis> &#8594; <emphasis role="strong">Java</emphasis> &#8594; <emphasis role="strong">Sonar way</emphasis> &#8594; <emphasis role="strong">Copy</emphasis></simpara>
</listitem>
<listitem>
<simpara>Select the newly created profile</simpara>
</listitem>
<listitem>
<simpara>Now you can :</simpara>
<itemizedlist>
<listitem>
<simpara>Click on the number of active rules to deactivate some</simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">Activate More</emphasis></simpara>
</listitem>
<listitem>
<simpara>Go to <emphasis role="strong">Rules</emphasis>, search one and change its value</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="_technical_debt">
<title>Technical Debt</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Select <emphasis role="strong">Administration</emphasis> &#8594; <emphasis role="strong">Configuration</emphasis> &#8594; <emphasis role="strong">General Settings</emphasis> &#8594; <emphasis role="strong">Technical Debt</emphasis></simpara>
</listitem>
<listitem>
<simpara>Set Maintainability rating grid = 0.01,0.02,0.03,0.05</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis>This means that a tech debt &lt; 1% is rated A, a tech debt &gt; 5% is rated E.</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Hit <emphasis role="strong">save technical debt</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_nexus3">
<title>Nexus3</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<warning>
<simpara>The technical account has to be created in CORP and defined in LAM as an administrator</simpara>
</warning>
<section xml:id="_url">
<title>URL</title>
<simpara>Repositories, release, snapshot and group, should already be created.</simpara>
<simpara>The public repository address can be found there :</simpara>
<itemizedlist>
<listitem>
<simpara>Click on the wheel</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Repository</emphasis> &#8594; <emphasis role="strong">Repositories</emphasis> &#8594; <emphasis role="strong">maven-public</emphasis></simpara>
</listitem>
<listitem>
<simpara>Get the URL</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_set_snapshot_retention">
<title>Set SNAPSHOT retention</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Go to <emphasis role="strong">Administration</emphasis> (wheel) &#8594; <emphasis role="strong">System</emphasis> &#8594; <emphasis role="strong">Tasks</emphasis> &#8594; <emphasis role="strong">Create task</emphasis></simpara>
</listitem>
<listitem>
<simpara>Type = Remove Snapshots From Maven Repository</simpara>
</listitem>
<listitem>
<simpara>Fields</simpara>
<itemizedlist>
<listitem>
<simpara>Name = Delete old snapshots</simpara>
</listitem>
<listitem>
<simpara>Repository = (All Repositories)</simpara>
</listitem>
<listitem>
<simpara>Minimum snapshot count = 5</simpara>
</listitem>
<listitem>
<simpara>Snapshot retention (days) = 7</simpara>
</listitem>
<listitem>
<simpara>Delete immediately = [x]</simpara>
</listitem>
<listitem>
<simpara>Task frequency = Daily</simpara>
</listitem>
<listitem>
<simpara>Time to run this task = 8:00</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_add_a_proxy_remote_repository">
<title>Add a proxy (=remote) repository</title>
<itemizedlist>
<listitem>
<simpara>Connect to Nexus</simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">Administration</emphasis> (wheel) &#8594; <emphasis role="strong">Repositories</emphasis> &#8594; <emphasis role="strong">Repository</emphasis> &#8594; <emphasis role="strong">Create repository</emphasis></simpara>
</listitem>
<listitem>
<simpara>Choose <emphasis role="strong">maven2 (proxy)</emphasis></simpara>
</listitem>
<listitem>
<simpara>Fill repository data</simpara>
<itemizedlist>
<listitem>
<simpara>Name = Wakaleo</simpara>
</listitem>
<listitem>
<simpara>Remote Storage = <link xl:href="http://www.wakaleo.com/maven/repos">http://www.wakaleo.com/maven/repos</link></simpara>
</listitem>
<listitem>
<simpara>Download Remote Indexes = False</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Save</simpara>
</listitem>
<listitem>
<simpara>On the corresponding line in the list, click on <emphasis role="strong">Analyze</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara>Now artifacts should be accessible via maven if the settings.xml is well configured to reach the Nexus :</simpara>
<formalpara>
<title>Settings.xml using Nexus</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"&gt;

	&lt;servers&gt;
	&lt;!-- tag::server[] --&gt;
		&lt;server&gt;
			&lt;id&gt;nexus-local&lt;/id&gt;
			&lt;username&gt;svc-fr-cric&lt;/username&gt;
			&lt;password&gt;ESBpwd2018&lt;/password&gt;
		&lt;/server&gt;
	&lt;!-- end::server[] --&gt;
		&lt;server&gt;
			&lt;id&gt;iserver-dev&lt;/id&gt;
			&lt;username&gt;devops&lt;/username&gt;
			&lt;password&gt;devopswm&lt;/password&gt;
		&lt;/server&gt;
		&lt;server&gt;
			&lt;!-- Gerrit credentials for maven-scm-plugin, which search with the hostname
				as server id --&gt;
			&lt;id&gt;cric.pl.s2-eu.nvx.com&lt;/id&gt;
			&lt;username&gt;svc-fr-cric&lt;/username&gt;
			&lt;!-- Gerrit does not use the CORP password, we use the UI generated one --&gt;
			&lt;password&gt;ptTpilL5FS47RHDFV8541owV4zkbZOtVrxyqRsmGhw&lt;/password&gt;
		&lt;/server&gt;
	&lt;/servers&gt;

	&lt;!-- tag::mirrors[] --&gt;
	&lt;mirrors&gt;
		&lt;mirror&gt;
			&lt;id&gt;nexus-local&lt;/id&gt;
			&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
			&lt;url&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-public/&lt;/url&gt;
		&lt;/mirror&gt;
	&lt;/mirrors&gt;
	&lt;!-- end::mirrors[] --&gt;

	&lt;!-- tag::profiles[] --&gt;
	&lt;profiles&gt;
		&lt;profile&gt;
			&lt;id&gt;nexus-local&lt;/id&gt;
			&lt;repositories&gt;
				&lt;repository&gt;
					&lt;id&gt;central&lt;/id&gt;
					&lt;url&gt;http://central&lt;/url&gt;
					&lt;releases&gt;
						&lt;enabled&gt;true&lt;/enabled&gt;
					&lt;/releases&gt;
					&lt;snapshots&gt;
						&lt;enabled&gt;true&lt;/enabled&gt;
					&lt;/snapshots&gt;
				&lt;/repository&gt;
			&lt;/repositories&gt;

			&lt;pluginRepositories&gt;
				&lt;pluginRepository&gt;
					&lt;id&gt;central&lt;/id&gt;
					&lt;url&gt;http://central&lt;/url&gt;
					&lt;releases&gt;
						&lt;enabled&gt;true&lt;/enabled&gt;
					&lt;/releases&gt;
					&lt;snapshots&gt;
						&lt;enabled&gt;true&lt;/enabled&gt;
					&lt;/snapshots&gt;
				&lt;/pluginRepository&gt;
			&lt;/pluginRepositories&gt;

			&lt;properties&gt;
				&lt;snapshotUrl&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-snapshots/&lt;/snapshotUrl&gt;
				&lt;releaseUrl&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-releases/&lt;/releaseUrl&gt;
			&lt;/properties&gt;

		&lt;/profile&gt;
	&lt;/profiles&gt;
	&lt;!-- end::profiles[] --&gt;

	&lt;!-- tag::activeProfiles[] --&gt;
	&lt;activeProfiles&gt;
		&lt;activeProfile&gt;nexus-local&lt;/activeProfile&gt;
	&lt;/activeProfiles&gt;
	&lt;!-- end::activeProfiles[] --&gt;


&lt;/settings&gt;</programlisting>
</para>
</formalpara>
<itemizedlist>
<title>Repositories to add</title>
<listitem>
<simpara>For SchemaSpy : <link xl:href="http://www.wakaleo.com/maven/repos">http://www.wakaleo.com/maven/repos</link></simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_jira">
<title>JIRA</title>
<simpara>Jira is used here in association with BugPicture, to have a Gantt chart.</simpara>
<section xml:id="_jira_access_restriction">
<title>JIRA Access restriction</title>
<itemizedlist>
<title>To restrict the access to stay under the 10 members for the cheapest license ($12 with tax once and for all) :</title>
<listitem>
<simpara>in LAM, create the jira-users group, and put in all users you want to give access to JIRA</simpara>
</listitem>
<listitem>
<simpara>browse user management in JIRA : <link xl:href="https://dge.pl.s2-eu.nvx.com/jira/secure/admin/user/UserBrowser.jspa">https://dge.pl.s2-eu.nvx.com/jira/secure/admin/user/UserBrowser.jspa</link></simpara>
<itemizedlist>
<listitem>
<simpara>Give you the <emphasis role="strong">jira-administrators</emphasis> right and remove <emphasis role="strong">pladmin</emphasis> from this group</simpara>
</listitem>
<listitem>
<simpara>define <emphasis role="strong">jira-users</emphasis> as default group</simpara>
</listitem>
<listitem>
<simpara>remove all groups EXCEPT <emphasis role="strong">jira-administrators</emphasis> and <emphasis role="strong">jira-users</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_project">
<title>Project</title>
<section xml:id="_add_time_estimated">
<title>Add Time Estimated</title>
<itemizedlist>
<title>To add <emphasis role="strong">time estimated</emphasis> in Kanban</title>
<listitem>
<simpara>Edit an issue</simpara>
</listitem>
<listitem>
<simpara>Where is my field ? : "Time Tracking"</simpara>
</listitem>
<listitem>
<simpara>Click on the link to add it</simpara>
</listitem>
</itemizedlist>
<simpara>Now it is added. To define to days as default unit :</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Wheel</emphasis> &#8594; <emphasis role="strong">Issues</emphasis> &#8594; Left pannel <emphasis role="strong">Time Tracking</emphasis> &#8594; <emphasis role="strong">Deactivate</emphasis></simpara>
</listitem>
<listitem>
<simpara>Change configuration</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Time format</emphasis> = days</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Default Unit</emphasis> = day</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Activate</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_configure_emails_notification">
<title>Configure emails notification</title>
<simpara>To disable emails notification :</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">MyProject</emphasis> &#8594; Bottom left corner <emphasis role="strong">Project Settings</emphasis> &#8594; <emphasis role="strong">Notifications</emphasis> &#8594; <emphasis role="strong">Actions</emphasis> &#8594; <emphasis role="strong">Select a scheme</emphasis> &#8594; <emphasis role="strong">None</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="_version">
<title>Version</title>
<simpara>Perform these actions for each new version.</simpara>
<section xml:id="_add_new_members">
<title>Add new members</title>
<simpara>If you have new members in this version, add them in LAM and especially in the <emphasis role="strong">jira</emphasis> group.</simpara>
<simpara>Update JIRA rights :</simpara>
<itemizedlist>
<listitem>
<simpara>Click on the wheel &#8594; <emphasis role="strong">User management</emphasis> &#8594; left section <emphasis role="strong">User Directories</emphasis></simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Synchronize</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_create_the_version">
<title>Create the version</title>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">MyProject</emphasis> &#8594; left section <emphasis role="strong">Releases</emphasis></simpara>
</listitem>
<listitem>
<simpara>Fill The data name/dates/description</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Add</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_add_tickets">
<title>Add tickets</title>
<itemizedlist>
<listitem>
<simpara>Add all tickets in JIRA</simpara>
</listitem>
<listitem>
<simpara>Import all in BigPicture</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_bigpicture">
<title>BigPicture</title>
<simpara>BigPictures is a 10$ plugin that adds Gantt capabilities to JIRA. Install this plugin if you have a license or want to try it for a month.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/jira-bigpicture.png"/>
</imageobject>
<textobject><phrase>jira bigpicture</phrase></textobject>
</inlinemediaobject></simpara>
<section xml:id="_gantt">
<title>Gantt</title>
<simpara>To see Gantt chart, go to <emphasis role="strong">BigPicture</emphasis> &#8594; <emphasis role="strong">YourProject</emphasis> &#8594; <emphasis role="strong">Gantt</emphasis>.</simpara>
<note>
<simpara>You can edit a ticket using "E" shortcuts when in GANTT view</simpara>
</note>
</section>
<section xml:id="_configure_layout">
<title>Configure layout</title>
<itemizedlist>
<title>To obtain the layout of the picture</title>
<listitem>
<simpara><emphasis role="strong">BigPicture</emphasis> &#8594; <emphasis role="strong">Gantt</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">View</emphasis> &#8594; <emphasis role="strong">Layout</emphasis> &#8594; <emphasis role="strong">Compact</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">View</emphasis> &#8594; <emphasis role="strong">Perspective</emphasis> &#8594; <emphasis role="strong">Team</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">View</emphasis> &#8594; <emphasis role="strong">Perspective</emphasis> &#8594; <emphasis role="strong">Manager Perspectives</emphasis></simpara>
</listitem>
<listitem>
<simpara>using drag and drops, keep only these fields</simpara>
<itemizedlist>
<listitem>
<simpara>Key, Summary, Priority, Assignee, Time Tracking</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>save</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">BigPicture</emphasis> &#8594; <emphasis role="strong">Gantt</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Data</emphasis> &#8594; <emphasis role="strong">Sort tasks A-Z</emphasis> &#8594; <emphasis role="strong">Assignee</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_regroup_tasks">
<title>Regroup tasks</title>
<itemizedlist>
<title>To regroup tasks under bigger subjects in Gantt view</title>
<listitem>
<simpara><emphasis role="strong">Task</emphasis> &#8594; <emphasis role="strong">Create task</emphasis> &#8594; <emphasis role="strong">Artificial Task</emphasis></simpara>
</listitem>
<listitem>
<simpara>Put it before all wanted subtasks with <emphasis role="strong">up arrow</emphasis> or <emphasis role="strong">down arrow</emphasis></simpara>
</listitem>
<listitem>
<simpara>Select each task and make them subtask by clicking on <emphasis role="strong">&#8594;</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_add_deadlines">
<title>Add deadlines</title>
<itemizedlist>
<title>To add a deadline in Gantt view</title>
<listitem>
<simpara><emphasis role="strong">Task</emphasis> &#8594; <emphasis role="strong">Create task</emphasis> &#8594; <emphasis role="strong">Artificial task</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</section>
<section xml:id="_nexus2">
<title>Nexus2</title>
<warning>
<simpara>Deprecated, use Nexus3</simpara>
</warning>
<section xml:id="_define_rights_of_technical_account">
<title>Define rights of technical account</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<warning>
<simpara>The technical account has to be created in CORP and defined in LAM as an administrator</simpara>
</warning>
<itemizedlist>
<listitem>
<simpara>Click on <emphasis role="strong">Security</emphasis> &#8594; <emphasis role="strong">Users</emphasis></simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">LDAP</emphasis> (next to <emphasis role="strong">Delete</emphasis>) and search for your technical account name. It should appear in list below.</simpara>
</listitem>
<listitem>
<simpara>In <emphasis role="strong">Config</emphasis> section associated, there is only <emphasis role="strong">admins</emphasis> Role.</simpara>
</listitem>
<listitem>
<simpara>Add these roles :</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Nexus Deployment Role</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Nexus Developer Role</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Repo: All Repositories (Full Control)</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_set_snapshot_retention_2">
<title>Set SNAPSHOT retention</title>
<note>
<simpara>This has to be done only for a new Production Line</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Go to <emphasis role="strong">Administration</emphasis> &#8594; <emphasis role="strong">Scheduled Tasks</emphasis> &#8594; <emphasis role="strong">Add</emphasis></simpara>
</listitem>
<listitem>
<simpara>Define the attributes :</simpara>
<itemizedlist>
<listitem>
<simpara>Name = Delete old snapshots</simpara>
</listitem>
<listitem>
<simpara>Task Type = Remove Snapshots From Repository</simpara>
</listitem>
<listitem>
<simpara>Repository/Group = All Repositories</simpara>
</listitem>
<listitem>
<simpara>Minimum snapshot count = 5</simpara>
</listitem>
<listitem>
<simpara>Snapshot retention (days) = 7</simpara>
</listitem>
<listitem>
<simpara>Remove if released = [ ]</simpara>
<itemizedlist>
<listitem>
<simpara>Else, you can end up loosing all SNAPSHOTS without notice !</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Delete immediately = [x]</simpara>
</listitem>
<listitem>
<simpara>Recurrence = Daily</simpara>
</listitem>
<listitem>
<simpara>Recurring Time = 8:00</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_add_a_proxy_remote_repository_2">
<title>Add a proxy (=remote) repository</title>
<itemizedlist>
<listitem>
<simpara>Connect to Nexus</simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">Repositories</emphasis> &#8594; <emphasis role="strong">Add&#8230;&#8203;</emphasis> &#8594; <emphasis role="strong">Proxy</emphasis></simpara>
</listitem>
<listitem>
<simpara>Fill, example sonatype snapshot</simpara>
<itemizedlist>
<listitem>
<simpara>Repository ID = sonatype-snapshots</simpara>
</listitem>
<listitem>
<simpara>Repository Name = Sonatype Snapshots</simpara>
</listitem>
<listitem>
<simpara>Repository Type = proxy</simpara>
</listitem>
<listitem>
<simpara>Repository Policy = Snapshot</simpara>
</listitem>
<listitem>
<simpara>Remote Storage Location = <link xl:href="https://oss.sonatype.org/content/repositories/snapshots/">https://oss.sonatype.org/content/repositories/snapshots/</link></simpara>
</listitem>
<listitem>
<simpara>Download Remote Indexes = False</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Hit save</simpara>
</listitem>
<listitem>
<simpara>Click on bottom section <emphasis role="strong">Routing</emphasis> &#8594; <emphasis role="strong">Update now</emphasis></simpara>
</listitem>
<listitem>
<simpara>Go back to <emphasis role="strong">Repositories</emphasis> and select <emphasis role="strong">Public Repositories</emphasis></simpara>
</listitem>
<listitem>
<simpara>In bottom section <emphasis role="strong">Configuration</emphasis> add your new repository to the right</simpara>
</listitem>
<listitem>
<simpara>Hit save</simpara>
</listitem>
</itemizedlist>
<simpara>Now artifacts should be accessible via maven if the settings.xml is well configured to reach the Nexus.</simpara>
<itemizedlist>
<title>Repositories to add</title>
<listitem>
<simpara>For SchemaSpy : <link xl:href="http://www.wakaleo.com/maven/repos">http://www.wakaleo.com/maven/repos</link></simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_additionnal_nvx_vm_webmethods_elastic_servers">
<title>Additionnal nvx VM : webMethods &amp; Elastic servers</title>
<itemizedlist>
<listitem>
<simpara>VM host = <emphasis role="strong">frpardge.corp.nvx.com</emphasis></simpara>
</listitem>
<listitem>
<simpara>VM user = <emphasis role="strong">devops</emphasis></simpara>
</listitem>
</itemizedlist>
<section xml:id="_initialize_vm">
<title>Initialize VM</title>
<itemizedlist>
<listitem>
<simpara>Adding a user</simpara>
<literallayout class="monospaced">adduser devops</literallayout>
</listitem>
<listitem>
<simpara>Granting him root privileges</simpara>
<literallayout class="monospaced">visudo</literallayout>
<literallayout class="monospaced">devops ALL=(ALL:ALL) ALL</literallayout>
</listitem>
<listitem>
<simpara>Checking FS size</simpara>
<literallayout class="monospaced">parted
print free</literallayout>
<itemizedlist>
<listitem>
<simpara>Example</simpara>
<literallayout class="monospaced">Number  Start   End     Size    Type     File system  Flags
       32.3kB  1049kB  1016kB           Free Space
1      1049kB  500MB   499MB   primary  ext2         boot
2      500MB   53.7GB  53.2GB  primary               lvm
       53.7GB  53.7GB  1049kB           Free Space</literallayout>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<warning>
<simpara>Below instructions are for Ubuntu only. You can check your Linux distribution with this command : cat /etc/*-release</simpara>
</warning>
<itemizedlist>
<listitem>
<simpara>Add some server for apt-get</simpara>
<literallayout class="monospaced">sudo vi /etc/apt/sources.list</literallayout>
<literallayout class="monospaced">deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ trusty-security main restricted universe multiverse
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse</literallayout>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_install_docker">
<title>Install Docker</title>
<warning>
<simpara>Below instructions are for Ubuntu 14 only. You can check your Linux distribution with this command : cat /etc/*-release</simpara>
</warning>
<literallayout class="monospaced">apt-get install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
apt-get update
apt-cache search docker-ce
apt-get install docker-ce</literallayout>
<itemizedlist>
<listitem>
<simpara>May work on Jenkins slave</simpara>
</listitem>
</itemizedlist>
<warning>
<simpara>don&#8217;t use on managed PL, we don&#8217;t have enough rights</simpara>
</warning>
<literallayout class="monospaced">sudo add-apt-repository \
  "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") \
  $(lsb_release -cs) \
  stable"
sudo apt-get update
sudo apt-cache search docker-ce
sudo apt-get install --assume-yes docker-ce
sudo dockerd</literallayout>
<itemizedlist>
<listitem>
<simpara>Allow Docker remote API</simpara>
</listitem>
</itemizedlist>
<simpara>Solution found here <link xl:href="https://forums.docker.com/t/enable-remote-api-on-docker-hosts-in-ubuntu-14/11583/2">https://forums.docker.com/t/enable-remote-api-on-docker-hosts-in-ubuntu-14/11583/2</link></simpara>
<literallayout class="monospaced">vi /etc/default/docker</literallayout>
<literallayout class="monospaced">DOCKER_OPTS="-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock"</literallayout>
<itemizedlist>
<listitem>
<simpara>Start Docker Daemon</simpara>
<literallayout class="monospaced">sudo dockerd</literallayout>
<itemizedlist>
<listitem>
<simpara>To restart (as root)</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<warning>
<simpara>Don&#8217;t forget the docker.sock chmod if you use metricbeat</simpara>
</warning>
<literallayout class="monospaced">service docker restart</literallayout>
<itemizedlist>
<listitem>
<simpara>To check FS size</simpara>
<literallayout class="monospaced">root@frpardge:/var/lib/docker
$ du -sh -- * .*
92K     aufs
44K     containers
116K    image
52K     network
20K     plugins
4.0K    swarm
4.0K    tmp
4.0K    trust
28K     volumes
4.0K    .
61M     ..</literallayout>
<itemizedlist>
<listitem>
<simpara>Get rid of sudo for devops user</simpara>
<literallayout class="monospaced">sudo groupadd docker
sudo gpasswd -a devops docker
newgrp docker
docker run hello-world</literallayout>
</listitem>
<listitem>
<simpara>Install <emphasis role="strong">Portainer</emphasis> to ease administration</simpara>
<literallayout class="monospaced">sudo docker pull portainer/portainer</literallayout>
<literallayout class="monospaced">sudo docker run -d --name portainer --restart=always -p 19000:9000 -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer</literallayout>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To use, go to <link xl:href="http://frpardge.corp.nvx.com:19000">http://frpardge.corp.nvx.com:19000</link></simpara>
<itemizedlist>
<listitem>
<simpara>login/password = <emphasis role="strong">admin / administrator</emphasis></simpara>
<itemizedlist>
<listitem>
<simpara>Install docker-compose</simpara>
<literallayout class="monospaced">curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</literallayout>
<literallayout class="monospaced">chmod +x /usr/local/bin/docker-compose</literallayout>
<literallayout class="monospaced">docker-compose --version</literallayout>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<section xml:id="_define_nexus3_as_the_docker_registry">
<title>Define Nexus3 as the Docker registry</title>
<itemizedlist>
<listitem>
<simpara>Raise a ticket in INSERE to ask a port opening for Nexus3 as a Docker registry</simpara>
<itemizedlist>
<listitem>
<simpara>They will provide this kind of response, which indicates how to login before 'docker push' :</simpara>
<literallayout class="monospaced">docker login docker-registry-bpmfactory.s2-eu.nvx.com
User name: docker
User Password: dockerPWdbpmfactory</literallayout>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Use the information to add the registry in docker configuration</simpara>
<literallayout class="monospaced">vi /etc/docker/daemon.json</literallayout>
</listitem>
</itemizedlist>
<programlisting language="json" linenumbering="unnumbered">{
  "storage-driver": "devicemapper",
  "insecure-registries": [
    "docker-registry-bpmfactory.s2-eu.nvx.com"
  ],
  "disable-legacy-registry": true
}</programlisting>
<itemizedlist>
<listitem>
<simpara>be carefull not to have INSECURE_REGISTRY here, it would not start :</simpara>
<literallayout class="monospaced">vim /etc/sysconfig/docker</literallayout>
<literallayout class="monospaced">#INSECURE_REGISTRY='--insecure-registry userbxxy05.socle:8444'</literallayout>
<itemizedlist>
<listitem>
<simpara>Redémarrer docker</simpara>
<literallayout class="monospaced">service docker restart</literallayout>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_setup_a_dockerized_oracle12c_database">
<title>Setup a dockerized Oracle12c database</title>
<simpara>Database found here : <link xl:href="https://hub.docker.com/r/sath89/oracle-12c/">https://hub.docker.com/r/sath89/oracle-12c/</link></simpara>
<literallayout class="monospaced">docker pull sath89/oracle-12c</literallayout>
<literallayout class="monospaced">docker run --restart=always --name dbdev -d -p 18080:8080 -p 1521:1521 sath89/oracle-12c</literallayout>
<literallayout class="monospaced">docker logs -f feef20144fdc124d7b19d22aaf7bd63cbb837df667cc9764e7bdb5bcafa1af46</literallayout>
<literallayout class="monospaced">Database not initialized. Initializing database.
Starting tnslsnr
Copying database files
1% complete
3% complete
Import finished
Database ready to use. Enjoy! ;)</literallayout>
<itemizedlist>
<title>Connect to Oracle Application Express web management console with following settings :</title>
<listitem>
<simpara>host = <link xl:href="http://frpardge:18080/apex">http://frpardge:18080/apex</link></simpara>
</listitem>
<listitem>
<simpara>workspace = <emphasis role="strong">INTERNAL</emphasis></simpara>
</listitem>
<listitem>
<simpara>user = <emphasis role="strong">ADMIN</emphasis></simpara>
</listitem>
<listitem>
<simpara>password <emphasis role="strong">0raclE!</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_install_elastic_items">
<title>Install Elastic items</title>
<simpara>Configuration files are given in next associated sections below. For some of them, some chmod change is needed :</simpara>
<literallayout class="monospaced">cd ~/elastic
chmod go-w ./*.yml</literallayout>
<section xml:id="_migration_prerequisites">
<title>Migration prerequisites</title>
<itemizedlist>
<title>If you are upgrading from a previous version of Elastic, you have to do this before anything :</title>
<listitem>
<simpara>Close data senders using Portainer for containers</simpara>
<itemizedlist>
<listitem>
<simpara>Shutdown the IS, or just disable CgElastic &amp; WmMediator packages</simpara>
</listitem>
<listitem>
<simpara>Stop Heartbeat, Filebeat, Metricbeat containers</simpara>
</listitem>
<listitem>
<simpara>No need to stop Logstash if Filebeat is closed</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Check that nothing is coming in Elasticsearch with Kibana, then stop Kibana container</simpara>
</listitem>
<listitem>
<simpara>Stop Elasticsearch container</simpara>
</listitem>
</itemizedlist>
<simpara>For now, no data migration has been tried, so no support on it. This will be a fresh new Elasticsearch, and a Kibana with imported dashboards (hoping they still work).</simpara>
<simpara>Rename all stopped container, to be able to get the initial name on new containers.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_elasticsearch">
<title>Elasticsearch</title>
<note>
<simpara>If you are new to the Elastic Stack, learn with the excellent official Kibana tutorial :
<link xl:href="https://www.elastic.co/guide/en/kibana/current/getting-started.html">https://www.elastic.co/guide/en/kibana/current/getting-started.html</link></simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Install with docker without x-pack</simpara>
<literallayout class="monospaced">docker pull docker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0</literallayout>
</listitem>
</itemizedlist>
<formalpara>
<title>To start it</title>
<para>
<literallayout class="monospaced">docker run --restart=always -d --name elastic -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0</literallayout>
</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>if elastic stops directly after start with this error</simpara>
<literallayout class="monospaced">max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]</literallayout>
</listitem>
<listitem>
<simpara>Then type before retry</simpara>
<literallayout class="monospaced">sudo sysctl -w vm.max_map_count=262144</literallayout>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_kibana">
<title>Kibana</title>
<itemizedlist>
<listitem>
<simpara>Install with docker without x-pack</simpara>
<literallayout class="monospaced">docker pull docker.elastic.co/kibana/kibana-oss:6.0.0</literallayout>
</listitem>
<listitem>
<simpara>Create the file described at the end of this section</simpara>
<literallayout class="monospaced">~/elastic/kibana.yml</literallayout>
</listitem>
<listitem>
<simpara>Start the container</simpara>
<literallayout class="monospaced">docker run --restart=always -d --name kibana -p 5601:5601 -v ~/elastic/kibana.yml:/usr/share/kibana/config/kibana.yml docker.elastic.co/kibana/kibana-oss:6.0.0</literallayout>
</listitem>
</itemizedlist>
<simpara>Check that it is up and running : <link xl:href="http://frpardge:5601/">http://frpardge:5601/</link></simpara>
<itemizedlist>
<title>Once every application is up, you will be able to declare patterns :</title>
<listitem>
<simpara>cgwmbeat-*</simpara>
</listitem>
<listitem>
<simpara>heartbeat-*</simpara>
</listitem>
<listitem>
<simpara>jenkins</simpara>
</listitem>
<listitem>
<simpara>logstash-*</simpara>
</listitem>
<listitem>
<simpara>metricbeat-*</simpara>
</listitem>
<listitem>
<simpara>webmethodsmediator</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>And to apply some Elasticsearch default index configuration :</title>
<listitem>
<simpara>the limit of 1000 fields by index is a bit low, updated to 2000</simpara>
</listitem>
<listitem>
<simpara>default is 5 shards per index, too many for dev</simpara>
</listitem>
<listitem>
<simpara>default is 1 replica, for a single node ES it&#8217;s 0</simpara>
</listitem>
</itemizedlist>
<programlisting language="json" linenumbering="unnumbered">PUT _template/all
{
  "index_patterns" : ["*"],
  "settings": {
    "index.mapping.total_fields.limit": 2000,
    "index.max_docvalue_fields_search": 400,
    "number_of_shards": 1,
    "number_of_replicas": 0
  }
}</programlisting>
<simpara>Here is something to try, inside the "PUT _template/all", someday, to not have keyword (fixed word) + text (searchable) but only keyword :</simpara>
<literallayout class="monospaced">"dynamic_templates": [
  {
    "match_mapping_type": "string",
    "mapping": {
      "type": "keyword"
    }
  }
]</literallayout>
<formalpara>
<title>For Elasticsearch monitoring :</title>
<para>
<literallayout class="monospaced">GET /_cat/indices?v
GET _cluster/health</literallayout>
</para>
</formalpara>
<formalpara>
<title>~/elastic/kibana.yml</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered"># Kibana is served by a back end server. This setting specifies the port to use.
#server.port: 5601

# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.
# The default is 'localhost', which usually means remote machines will not be able to connect.
# To allow connections from remote users, set this parameter to a non-loopback address.
server.host: "0.0.0.0"

# Enables you to specify a path to mount Kibana at if you are running behind a proxy. This only affects
# the URLs generated by Kibana, your proxy is expected to remove the basePath value before forwarding requests
# to Kibana. This setting cannot end in a slash.
#server.basePath: ""

# The maximum payload size in bytes for incoming server requests.
#server.maxPayloadBytes: 1048576

# The Kibana server's name.  This is used for display purposes.
#server.name: "your-hostname"

# The URL of the Elasticsearch instance to use for all your queries.
elasticsearch.url: "http://frpardge.corp.nvx.com:9200"

# When this setting's value is true Kibana uses the hostname specified in the server.host
# setting. When the value of this setting is false, Kibana uses the hostname of the host
# that connects to this Kibana instance.
#elasticsearch.preserveHost: true

# Kibana uses an index in Elasticsearch to store saved searches, visualizations and
# dashboards. Kibana creates a new index if the index doesn't already exist.
#kibana.index: ".kibana"

# The default application to load.
#kibana.defaultAppId: "discover"

# If your Elasticsearch is protected with basic authentication, these settings provide
# the username and password that the Kibana server uses to perform maintenance on the Kibana
# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which
# is proxied through the Kibana server.
#elasticsearch.username: "user"
#elasticsearch.password: "pass"

# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.
# These settings enable SSL for outgoing requests from the Kibana server to the browser.
#server.ssl.enabled: false
#server.ssl.certificate: /path/to/your/server.crt
#server.ssl.key: /path/to/your/server.key

# Optional settings that provide the paths to the PEM-format SSL certificate and key files.
# These files validate that your Elasticsearch backend uses the same key files.
#elasticsearch.ssl.certificate: /path/to/your/client.crt
#elasticsearch.ssl.key: /path/to/your/client.key

# Optional setting that enables you to specify a path to the PEM file for the certificate
# authority for your Elasticsearch instance.
#elasticsearch.ssl.certificateAuthorities: [ "/path/to/your/CA.pem" ]

# To disregard the validity of SSL certificates, change this setting's value to 'none'.
#elasticsearch.ssl.verificationMode: full

# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of
# the elasticsearch.requestTimeout setting.
#elasticsearch.pingTimeout: 1500

# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value
# must be a positive integer.
#elasticsearch.requestTimeout: 30000

# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side
# headers, set this value to [] (an empty list).
#elasticsearch.requestHeadersWhitelist: [ authorization ]

# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten
# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.
#elasticsearch.customHeaders: {}

# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.
#elasticsearch.shardTimeout: 0

# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.
#elasticsearch.startupTimeout: 5000

# Specifies the path where Kibana creates the process ID file.
#pid.file: /var/run/kibana.pid

# Enables you specify a file where Kibana stores log output.
#logging.dest: stdout

# Set the value of this setting to true to suppress all logging output.
#logging.silent: false

# Set the value of this setting to true to suppress all logging output other than error messages.
#logging.quiet: false

# Set the value of this setting to true to log all events, including system usage information
# and all requests.
#logging.verbose: false

# Set the interval in milliseconds to sample system and process performance
# metrics. Minimum is 100ms. Defaults to 5000.
#ops.interval: 5000</programlisting>
</para>
</formalpara>
<section xml:id="_troubleshoot">
<title>Troubleshoot</title>
<simpara>Here is a list of problems and solutions.</simpara>
<section xml:id="_kibana_cannot_connect_to_elasticsearch">
<title>Kibana cannot connect to Elasticsearch</title>
<simpara>If Kibana cannot connect to Elasticsearch with this message :</simpara>
<literallayout class="monospaced">blocked by: [FORBIDDEN/12/index read-only / allow delete (api)];: [cluster_block_exception] blocked by: [FORBIDDEN/12/index read-only / allow delete (api)];</literallayout>
<simpara>Then apply these settings :</simpara>
<literallayout class="monospaced">PUT _settings
   {
       "index": {
       "blocks": {
       "read_only_allow_delete": "false"
   }</literallayout>
<literallayout class="monospaced">PUT cgwmbeat-2018.02.16/_settings
   {
       "index": {
       "blocks": {
       "read_only_allow_delete": "false"
   }</literallayout>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</section>
<section xml:id="_curator">
<title>Curator</title>
<literallayout class="monospaced">wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</literallayout>
<literallayout class="monospaced">sudo vi /etc/apt/sources.list</literallayout>
<literallayout class="monospaced">deb [arch=amd64] http://packages.elastic.co/curator/5/debian stable main</literallayout>
<literallayout class="monospaced">sudo apt-get update &amp;&amp; sudo apt-get install elasticsearch-curator</literallayout>
<formalpara>
<title>To start it</title>
<para>
<literallayout class="monospaced">curator --config ~/elastic/curator.config.yml --dry-run ~/elastic/curator.delete_indices.yml
curator --config ~/elastic/curator.config.yml ~/elastic/curator.delete_indices.yml</literallayout>
</para>
</formalpara>
<section xml:id="_automation">
<title>Automation</title>
<itemizedlist>
<listitem>
<simpara>Create below script</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>~/elastic/curator.sh</title>
<para>
<programlisting language="sh" linenumbering="unnumbered">#!/bin/sh

curator --config ~/elastic/curator.config.yml ~/elastic/curator.delete_indices.yml</programlisting>
</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>Open crontab</simpara>
<literallayout class="monospaced">crontab -e</literallayout>
</listitem>
<listitem>
<simpara>Add this line to launch it at 8:00 everyday</simpara>
<literallayout class="monospaced">0 8 * * * ~/elastic/curator.sh</literallayout>
</listitem>
<listitem>
<simpara>Exit and save with <emphasis role="strong">Ctrl+X</emphasis>, <emphasis role="strong">Y</emphasis>, <emphasis role="strong">Enter</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_configuration">
<title>Configuration</title>
<formalpara>
<title>~/elastic/curator.config.yml</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">---
# Remember, leave a key empty if there is no value.  None will be a string,
# not a Python "NoneType"
client:
  hosts:
    - 127.0.0.1
  port: 9200
  url_prefix:
  use_ssl: False
  certificate:
  client_cert:
  client_key:
  ssl_no_validate: False
  http_auth:
  timeout: 30
  master_only: False

logging:
  loglevel: INFO
  logfile:
  logformat: default
  blacklist: ['elasticsearch', 'urllib3']</programlisting>
</para>
</formalpara>
<formalpara>
<title>~/elastic/curator.delete_indices.yml</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">---
# Remember, leave a key empty if there is no value.  None will be a string,
# not a Python "NoneType"
#
# Also remember that all examples have 'disable_action' set to True.  If you
# want to use this action as a template, be sure to set this to False after
# copying it.
# # # #
# curator --config ~/elastic/curator.config.yml --dry-run ~/elastic/curator.delete_indices.yml
# curator --config ~/elastic/curator.config.yml ~/elastic/curator.delete_indices.yml
# # # #
actions:
  1:
    action: delete_indices
    description: Delete indices older than 30 days. No error when no actual deletion.
    options:
      ignore_empty_list: True
    filters:
    - filtertype: age
      source: name
      direction: older
      timestring: '%Y.%m.%d'
      unit: days
      unit_count: 30</programlisting>
</para>
</formalpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_heartbeat">
<title>Heartbeat</title>
<itemizedlist>
<listitem>
<simpara>Pull the image</simpara>
<literallayout class="monospaced">docker pull docker.elastic.co/beats/heartbeat:6.0.0</literallayout>
</listitem>
<listitem>
<simpara>Create the file described at the end of this section</simpara>
<literallayout class="monospaced">~/elastic/heartbeat.yml</literallayout>
</listitem>
<listitem>
<simpara>Start the container</simpara>
<literallayout class="monospaced">docker run --name heartbeat -d -v ~/elastic/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml docker.elastic.co/beats/heartbeat:6.0.0</literallayout>
</listitem>
</itemizedlist>
<formalpara>
<title>~/elastic/heartbeat.yml</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">#
# wget --user=svc-fr-pldouane --password=Na9Is4Aw0! https://cdsdouane.pl.s2-eu.nvx.com/jenkins/job/DTXE_P1_CodeReview/
#
heartbeat.monitors:
- name: Jenkins
  type: http
  schedule: '@every 30s'
  urls: ["https://bpmfactory.s2-eu.nvx.com/jenkins/job/CNAV-DGE_P1_Review/"]
  username: svc-fr-bpmfact
  password: Bpm-fact0ry
  check.request.method: GET
  check.response.status: 200
- name: 'Jenkins Douane'
  type: http
  schedule: '@every 30s'
  urls: ["https://cdsdouane.pl.s2-eu.nvx.com/jenkins/job/DTXE_P1_CodeReview/"]
  username: svc-fr-pldouane
  password: Na9Is4Aw0!
  check.request.method: GET
  check.response.status: 200
- name: 'Gerrit home'
  type: http
  schedule: '@every 30s'
  urls: ["https://bpmfactory.s2-eu.nvx.com/gerrit/changes/?n=25&amp;O=81"]
  username: svc-fr-bpmfact
  password: Bpm-fact0ry
  check.response.status: 200
- name: 'Gerrit viewFile'
  type: http
  schedule: '@every 30s'
  urls: ["https://bpmfactory.s2-eu.nvx.com/gerrit/changes/421/revisions/5ab9d4c5cab6a087b936748f2df6550666a502dd/files/Jenkinsfile-2-deploy-to-dev/diff?context=ALL"]
  username: svc-fr-bpmfact
  password: Bpm-fact0ry
  check.response.status: 200
- name: 'IS Dev'
  type: http
  schedule: '@every 30s'
  urls: ["http://frpardge:5555"]
  username: Administrator
  password: manage
  check.response.status: 200
- name: Kibana
  type: http
  schedule: '@every 30s'
  urls: ["http://frpardge:5601/app/kibana#/management?_g=()"]
  check.response.status: 200
- name: 'UM Dev'
  type: tcp
  schedule: '@every 30s'
  hosts: ["frpardge:9000"]

heartbeat.scheduler:
  limit: 10

output.elasticsearch:
  hosts: ["frpardge.corp.nvx.com:9200"]

dashboards.enabled: true</programlisting>
</para>
</formalpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_logstash">
<title>Logstash</title>
<note>
<simpara>Install this only if you have files to be parsed and sent to Elasticsearch</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Pull the image</simpara>
<literallayout class="monospaced">docker pull docker.elastic.co/logstash/logstash-oss:6.0.0</literallayout>
</listitem>
<listitem>
<simpara>Create the file described at the end of this section</simpara>
<literallayout class="monospaced">~/elastic/logstash-pipelines/logstash.conf</literallayout>
</listitem>
<listitem>
<simpara>Start the container</simpara>
<literallayout class="monospaced">docker run --restart=always --name logstash -d -p 5043:5043 -v ~/elastic/logstash-pipelines/:/usr/share/logstash/pipeline/ docker.elastic.co/logstash/logstash-oss:6.0.0</literallayout>
</listitem>
</itemizedlist>
<formalpara>
<title>~/elastic/logstash-pipelines/logstash.conf</title>
<para>
<programlisting language="json" linenumbering="unnumbered">input {
    beats {
        port =&gt; "5043"
    }
}

filter {
  if [fields][log_type] == "perflog" {
    grok {
        match =&gt; { "message" =&gt; "%{TIMESTAMP_ISO8601:timestamp} INFO  PERFORMANCES - \[%{GREEDYDATA:package}\] %{WORD:method}\(\) completed successfully in %{NUMBER:duration:int} ms" }
    }
  }
  else {
    grok {
        match =&gt; { "message" =&gt; "\[%{TIMESTAMP_ISO8601:timestamp}\] \[%{NOTSPACE:wMCode}\] %{GREEDYDATA:textMsg}" }
    }
  }
  date {
    match =&gt; [ "timestamp", ISO8601 ]
    timezone =&gt; "Europe/Paris"
    target =&gt; "@timestamp"
  }
}

output {
    elasticsearch {
        hosts =&gt; [ "frpardge.corp.nvx.com:9200" ]
    }
    #stdout { codec =&gt; rubydebug }
}</programlisting>
</para>
</formalpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_filebeat">
<title>Filebeat</title>
<note>
<simpara>Install this only if you have files to be parsed and sent to Elasticsearch</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>Pull the image</simpara>
<literallayout class="monospaced">docker pull docker.elastic.co/beats/filebeat:6.0.0</literallayout>
</listitem>
<listitem>
<simpara>Create the file described at the end of this section</simpara>
<literallayout class="monospaced">~/elastic/filebeat.yml</literallayout>
</listitem>
<listitem>
<simpara>Start the container</simpara>
<literallayout class="monospaced">docker run --name filebeat -d -v /opt/sagis/IntegrationServer/instances/default/logs/:/islogs/ -v ~/elastic/filebeat.yml:/usr/share/filebeat/filebeat.yml docker.elastic.co/beats/filebeat:6.0.0</literallayout>
</listitem>
</itemizedlist>
<formalpara>
<title>~/elastic/filebeat.yml</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">filebeat.prospectors:

- type: log
  paths:
    - /islogs/log4j2/perfs.log
  fields: {log_type: perflog}

- type: log
  paths:
    - /islogs/server.log
  multiline.pattern: '^\[20'
  multiline.negate: true
  multiline.match: after
  fields: {log_type: serverlog}

output.logstash:
  hosts: ["frpardge.corp.nvx.com:5043"]</programlisting>
</para>
</formalpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_metricbeat">
<title>Metricbeat</title>
<simpara>This chmod has to be done again after each VM reboot before starting Metricbeat :</simpara>
<literallayout class="monospaced">sudo chmod 777 /var/run/docker.sock</literallayout>
<itemizedlist>
<listitem>
<simpara>Pull the image</simpara>
<literallayout class="monospaced">docker pull docker.elastic.co/beats/metricbeat:6.0.0</literallayout>
</listitem>
<listitem>
<simpara>Create the file described at the end of this section</simpara>
<literallayout class="monospaced">~/elastic/metricbeat.yml</literallayout>
</listitem>
<listitem>
<simpara>Start the container</simpara>
<literallayout class="monospaced">docker run --name metricbeat -d -v /var/run/docker.sock:/var/run/docker.sock -v ~/elastic/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml --volume=/proc:/hostfs/proc:ro --volume=/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro --volume=/:/hostfs:ro --net=host docker.elastic.co/beats/metricbeat:6.0.0 metricbeat -e -system.hostfs=/hostfs</literallayout>
</listitem>
</itemizedlist>
<simpara>To test you CPU graphs, with the proper handling of the cores, you can use stress application to load one or multiple cores :</simpara>
<literallayout class="monospaced">sudo apt-get install stress
stress --cpu 2</literallayout>
<formalpara>
<title>~/elastic/metricbeat.yml</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">metricbeat.modules:
- module: system
  period: 10s
  metricsets:
    - cpu
    #- load
    - memory
    #- network
    - process
    - process_summary
    #- core
    #- diskio
    #- socket
  processes: ['.*']
  process.include_top_n:
    by_cpu: 10      # include top processes by CPU
    by_memory: 10   # include top processes by memory

- module: system
  period: 1m
  metricsets:
    - filesystem
    - fsstat
  processors:
  - drop_event.when.regexp:
      system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|hostfs|run|var)($|/)'

- module: docker
  metricsets:
    #- container
    - cpu
    #- diskio
    #- healthcheck
    #- image
    #- info
    - memory
    #- network
  hosts: ["unix:///var/run/docker.sock"]
  period: 10s

output.elasticsearch:
  hosts: ["frpardge.corp.nvx.com:9200"]

metricbeat.config.modules:
  path: /usr/share/metricbeat/metricbeat.yml
  reload.enabled: true
  reload.period: 60s</programlisting>
</para>
</formalpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_grafana">
<title>Grafana</title>
<literallayout class="monospaced">wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana_4.4.3_amd64.deb</literallayout>
<literallayout class="monospaced">sudo apt-get install -y adduser libfontconfig</literallayout>
<literallayout class="monospaced">sudo dpkg -i grafana_4.4.3_amd64.deb</literallayout>
<formalpara>
<title>To start it</title>
<para>
<literallayout class="monospaced">sudo service grafana-server start</literallayout>
</para>
</formalpara>
<formalpara>
<title>To auto start it at boot time</title>
<para>
<literallayout class="monospaced">sudo update-rc.d grafana-server defaults</literallayout>
</para>
</formalpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_jaeger_tracing_openzipkin_like">
<title>Jaeger Tracing (OpenZipkin-like)</title>
<formalpara>
<title>To start it</title>
<para>
<literallayout class="monospaced">docker run --restart=always --name jaeger -d -p5775:5775/udp -p6831:6831/udp -p5778:5778 -p16686:16686 jaegertracing/all-in-one:latest</literallayout>
</para>
</formalpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_install_wm_servers">
<title>Install WM servers</title>
<section xml:id="_prerequisites_2">
<title>Prerequisites</title>
<section xml:id="_enable_x11_ssh_graphical">
<title>Enable X11, ssh graphical</title>
<itemizedlist>
<listitem>
<simpara>On Windows machine</simpara>
<itemizedlist>
<listitem>
<simpara>install Xming</simpara>
</listitem>
<listitem>
<simpara>configure putty session for X11 :</simpara>
</listitem>
<listitem>
<simpara>Connection &gt; SSH &gt; X11</simpara>
</listitem>
<listitem>
<simpara>check "ENable X11"</simpara>
</listitem>
<listitem>
<simpara>X display location = localhost:0.0</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>On linux VM</simpara>
<literallayout class="monospaced">apt-get install libfontconfig1 libxrender1
apt-get install libxtst6
apt-get install libxi6</literallayout>
</listitem>
</itemizedlist>
</section>
<section xml:id="_install_java">
<title>Install Java</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://tecadmin.net/install-oracle-java-8-ubuntu-via-ppa/">https://tecadmin.net/install-oracle-java-8-ubuntu-via-ppa/</link></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_setup_hosts">
<title>Setup hosts</title>
<literallayout class="monospaced">vi /etc/hosts</literallayout>
<literallayout class="monospaced">127.0.0.1 dbhost umhost ishost</literallayout>
</section>
<section xml:id="_prepare_database">
<title>Prepare database</title>
<literallayout class="monospaced">./dbConfigurator.sh -i -file wm-db-script.xml -dir . --password=WMUSER --admin_password=oracle</literallayout>
</section>
</section>
<section xml:id="_install_is_um_manually">
<title>Install IS &amp; UM manually</title>
<warning>
<simpara>TODO</simpara>
</warning>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</section>
<section xml:id="_appendix">
<title>Appendix</title>
<section xml:id="_revision_marks">
<title>Revision marks</title>
<formalpara>
<title>Differences since last tag</title>
<para>
<programlisting language="diff" linenumbering="unnumbered">Unresolved directive in subdocs/_closure.adoc - include::D:\workspaceJava\cg-wm\target/generated-docs/history/ci-pf-configuration.adoc.diff[]</programlisting>
</para>
</formalpara>
</section>
</section>
</article>