<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc maxdepth="3"?>
<?asciidoc-numbered?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>CG WM Developer Guide</title>
<date>2018-08-16</date>
<author>
<personname>
<firstname>Version 1.18-SNAPSHOT</firstname>
</personname>
</author>
<authorinitials>V</authorinitials>
</info>
<table frame="all" rowsep="1" colsep="1">
<title>History</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="12.5*"/>
<colspec colname="col_2" colwidth="12.5*"/>
<colspec colname="col_3" colwidth="75*"/>
<thead>
<row>
<entry align="center" valign="top">Date</entry>
<entry align="center" valign="top">Author</entry>
<entry align="left" valign="top">Detail
Unresolved directive in subdocs/_init.adoc - include::D:\workspaceJava\cg-wm\target/generated-docs/history/developer-guide.adoc.psv[]</entry>
</row>
</thead>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>References</title>
<tgroup cols="5">
<colspec colname="col_1" colwidth="6.25*"/>
<colspec colname="col_2" colwidth="6.25*"/>
<colspec colname="col_3" colwidth="12.5*"/>
<colspec colname="col_4" colwidth="37.5*"/>
<colspec colname="col_5" colwidth="37.5*"/>
<thead>
<row>
<entry align="center" valign="top">RÃ©f.</entry>
<entry align="center" valign="top">Ver.</entry>
<entry align="center" valign="top">Date</entry>
<entry align="left" valign="top">Document</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="center" valign="top"><simpara>[01]</simpara></entry>
<entry align="center" valign="top"><simpara>1.18-SNAPSHOT</simpara></entry>
<entry align="center" valign="top"><simpara>2018-08-16</simpara></entry>
<entry align="left" valign="top"><simpara>ci-pf-configuration.pdf</simpara></entry>
<entry align="left" valign="top"><simpara>Configuration guide for the whole CI/CD platform</simpara></entry>
</row>
<row>
<entry align="center" valign="top"><simpara>[02]</simpara></entry>
<entry align="center" valign="top"><simpara>1.18-SNAPSHOT</simpara></entry>
<entry align="center" valign="top"><simpara>2018-08-16</simpara></entry>
<entry align="left" valign="top"><simpara>cgutils-utility-methods.pdf</simpara></entry>
<entry align="left" valign="top"><simpara>CgUtils utility methods</simpara></entry>
</row>
<row>
<entry align="center" valign="top"><simpara>[04]</simpara></entry>
<entry align="center" valign="top"><simpara>1.18-SNAPSHOT</simpara></entry>
<entry align="center" valign="top"><simpara>2018-08-16</simpara></entry>
<entry align="left" valign="top"><simpara>cgutils-ano-handling.pdf</simpara></entry>
<entry align="left" valign="top"><simpara>CgUtils ano handling</simpara></entry>
</row>
<row>
<entry align="center" valign="top"><simpara>[05]</simpara></entry>
<entry align="center" valign="top"><simpara>1.18-SNAPSHOT</simpara></entry>
<entry align="center" valign="top"><simpara>2018-08-16</simpara></entry>
<entry align="left" valign="top"><simpara>cgmsgtracker-user-manual.pdf</simpara></entry>
<entry align="left" valign="top"><simpara>CgMsgTracker, UM/Broker documents tracker</simpara></entry>
</row>
<row>
<entry align="center" valign="top"><simpara>[06]</simpara></entry>
<entry align="center" valign="top"><simpara>1.18-SNAPSHOT</simpara></entry>
<entry align="center" valign="top"><simpara>2018-08-16</simpara></entry>
<entry align="left" valign="top"><simpara>cgelastic-user-manual</simpara></entry>
<entry align="left" valign="top"><simpara>CgElastic, Elastic Stack custom webMethods module</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>&lt;&lt;&lt;ecl
== Introduction</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dilbert-collaboration.png"/>
</imageobject>
<textobject><phrase>dilbert collaboration</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>The purpose of this document is to guide you in the setup of the development environment for CG webMethods (CG-WM) project.</simpara>
<simpara>CG-WM gather is mainly composed of 3 projects :</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">cg-utils</emphasis> (java 8)</simpara>
<itemizedlist>
<listitem>
<simpara>utility java methods for any webMethods project (see [02])</simpara>
</listitem>
<listitem>
<simpara>includes asynchronous ano handling (see [03])</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">cg-msg-tracker</emphasis> (java 8)</simpara>
<itemizedlist>
<listitem>
<simpara>Swing application for monitoring Broker / Universal Messaging publish/subscribe documents</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">cg-elastic</emphasis> (java 8)</simpara>
<itemizedlist>
<listitem>
<simpara>Elastic Stack custom webMethods module for continuous monitoring</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>Developements on this project are heavily relying on the production line <link xl:href="https://cric.pl.s2-eu.nvx.com/">https://cric.pl.s2-eu.nvx.com/</link> to implement Continuous Integration / Continuous Deployment / Continuous Performance Testing / Continuous Monitoring.</simpara>
<simpara>These projects are maintained in an Open Source mode within nvx. This can be volontary to increase personnel knowledge, overall projects quality, or this can be part of a future or actual client need.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/OpenSource-realite.jpg"/>
</imageobject>
<textobject><phrase>OpenSource realite</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_touring_the_interfaces">
<title>Touring the interfaces</title>
<section xml:id="_fusionforge">
<title>FusionForge</title>
<simpara><link xl:href="https://cric.pl.s2-eu.nvx.com/fusionforge/tracker/?atid=101&amp;func=browse&amp;group_id=6">https://cric.pl.s2-eu.nvx.com/fusionforge/tracker/?atid=101&amp;func=browse&amp;group_id=6</link></simpara>
<simpara>Everything starts in FusionForge where tasks and tickets are put in decreasing order of need. But anyone can work on anything.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/FusionForge.png"/>
</imageobject>
<textobject><phrase>FusionForge</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_asciidocfx">
<title>AsciiDocFX</title>
<simpara>All documentations on the project, including this one, are written as part of DevOps principle Documentation-As-Code using AsciiDocFX and compiled with Asciidoctor under maven to produce PDF.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/AsciidocFX.png"/>
</imageobject>
<textobject><phrase>AsciidocFX</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_eclipse">
<title>Eclipse</title>
<simpara>Eclipse is the preferred tool for development.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/Eclipse.png"/>
</imageobject>
<textobject><phrase>Eclipse</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_gerrit">
<title>Gerrit</title>
<simpara><link xl:href="https://cric.pl.s2-eu.nvx.com/gerrit/#/q/status:open">https://cric.pl.s2-eu.nvx.com/gerrit/#/q/status:open</link></simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/Gerrit.png"/>
</imageobject>
<textobject><phrase>Gerrit</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Collaborative Code Review is applied on the project inspired from open sources projects for better scalability, quality and developer localizations tackling.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dilbert-homeworking.png"/>
</imageobject>
<textobject><phrase>dilbert homeworking</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_jenkins">
<title>Jenkins</title>
<simpara><link xl:href="https://cric.pl.s2-eu.nvx.com/jenkins/">https://cric.pl.s2-eu.nvx.com/jenkins/</link></simpara>
<simpara>Jenkins is used for both review and merge modes to automate build and deployement. As part of DevOps principle, Pipeline-As-Code are used. The Jenkins Blue sexy interface is deployed.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/Jenkins.png"/>
</imageobject>
<textobject><phrase>Jenkins</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_sonarqube">
<title>SonarQube</title>
<simpara><link xl:href="https://cric.pl.s2-eu.nvx.com/sonarqube/">https://cric.pl.s2-eu.nvx.com/sonarqube/</link></simpara>
<simpara>SonarQube helps maintain a continuous high quality with gateways used on each Jenkins pipeline.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/SonarQube.png"/>
</imageobject>
<textobject><phrase>SonarQube</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_nexus">
<title>Nexus</title>
<simpara><link xl:href="https://cric.pl.s2-eu.nvx.com/nexus/">https://cric.pl.s2-eu.nvx.com/nexus/</link></simpara>
<simpara>Nexus stores binary produced on the project, SNAPSHOTS and RELEASES.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/Nexus.png"/>
</imageobject>
<textobject><phrase>Nexus</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_integration_server">
<title>Integration Server</title>
<simpara><link xl:href="http://frpardge.corp.nvx.com:5555/">http://frpardge.corp.nvx.com:5555/</link></simpara>
<simpara>A basic webMethods 9.12 ecosystem, including Integration Server, Oracle XE Database, CentraSite, Mediator, Universal Messaging, is accessible for development and tests. Assets are automatically deployed on merges by Jenkins.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/IntegrationServer.png"/>
</imageobject>
<textobject><phrase>IntegrationServer</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_elastic_stack">
<title>Elastic Stack</title>
<simpara><link xl:href="http://frpardge:5601/app/kibana#/dashboard/44bbf690-ab4d-11e7-80b8-ef10d01e4f2a">http://frpardge:5601/app/kibana#/dashboard/44bbf690-ab4d-11e7-80b8-ef10d01e4f2a</link></simpara>
<simpara>The Elastic Stack is used for Continuous Monitoring.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/Kibana.png"/>
</imageobject>
<textobject><phrase>Kibana</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_jaeger_tracing">
<title>Jaeger tracing</title>
<simpara><link xl:href="http://frpardge.corp.nvx.com:16686/">http://frpardge.corp.nvx.com:16686/</link></simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/jaeger-detail.png"/>
</imageobject>
<textobject><phrase>jaeger detail</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/jaeger-relation.png"/>
</imageobject>
<textobject><phrase>jaeger relation</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>CgUtils implements open-tracing, and send them to a Jaeger server. This allows a fine grained follow up on the business process level, a field where the Elastic Stack cannot go for now.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_code_review_golden_rules_using_gerrit">
<title>Code review golden rules (using Gerrit)</title>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/gerrit-process.png"/>
</imageobject>
<textobject><phrase>gerrit process</phrase></textobject>
</inlinemediaobject></simpara>
<orderedlist numeration="arabic">
<title>These are rules to be followed for a smooth overall development process :</title>
<listitem>
<simpara>The team has to know that you are taking responsability of the current development task.</simpara>
</listitem>
<listitem>
<simpara>If not sure of what to achieve, confirm with task responsible</simpara>
</listitem>
<listitem>
<simpara>Target a complete realization in delays estimated by team leader. Alert on time shortage.</simpara>
</listitem>
<listitem>
<simpara>Update documentation along with code whenever it&#8217;s needed.</simpara>
</listitem>
<listitem>
<simpara>Do not group functionnalities in commit, to avoid long run reviews.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>It is possible to handle multiple review in parallel.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Commit text has to be explicit, complete, and synthetic.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Commit text must be one line for the sake of history and documentation readability (replace ':' with '()' and '-' with '+'). No limit to the lengh of the line.</simpara>
</listitem>
<listitem>
<simpara>If the commit include documentation, set a first line commit text suitable for documentation. Put other information on other lines (they won&#8217;t appear in documentation history)</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Commit often, at least on tuesdays and thursdays (even on unfinished current task).</simpara>
</listitem>
<listitem>
<simpara>No "related changes" should appear on the change in Gerrit, or you did not handle multiple review properly.</simpara>
</listitem>
<listitem>
<simpara>Fixing Jenkins failures is always a top priority.</simpara>
</listitem>
<listitem>
<simpara>On "Cannot merge" Gerrit message, you have to pull/commit/push to rebase properly</simpara>
</listitem>
<listitem>
<simpara>When Jenkins give a +1, add the <emphasis role="strong">reviewers</emphasis> list as reviewers, this should add all reviewing people.</simpara>
</listitem>
<listitem>
<simpara>When added as a reviewer, try to give a review in the next half day, knowing that it blocks the process.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>You don&#8217;t have to be an expert to do a review. At least try to spot pieces of code not well explained and missing javadoc. Try to imagine yourself as a future bug fixer who needs clean code to work properly.</simpara>
</listitem>
<listitem>
<simpara>If suitable, test the application or check the auto IT tests.</simpara>
</listitem>
<listitem>
<simpara>If any, check that the generated documention looks good in PDF.</simpara>
</listitem>
<listitem>
<simpara>Check that there is UT specifically testing the new/modified code.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>When one or two +1 from the team have been given (depending on the size of the team), add the <emphasis role="strong">validators</emphasis> list of reviewers for a final +2 review followed by a submit to the master branch.</simpara>
</listitem>
</orderedlist>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/git-messages.png"/>
</imageobject>
<textobject><phrase>git messages</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_documentation_as_code_with_asciidoc">
<title>Documentation-as-code with AsciiDoc</title>
<simpara>The documentation is written in Asciidoc. To help you to write your documentation, use AsciidocFX. It will allows you to visualize your documentation without having to generate the PDF.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/AsciidocFX.png"/>
</imageobject>
<textobject><phrase>AsciidocFX</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Download and install :</simpara>
<itemizedlist>
<listitem>
<simpara>AsciidocFX, to create and edit your documents</simpara>
</listitem>
<listitem>
<simpara>Graphviz, to add the extension for your AsciidocFX installation</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Rules to produce AsciiDoc files :</title>
<listitem>
<simpara>file names are in kebab-case, except the type at the beginning</simpara>
</listitem>
<listitem>
<simpara>use <emphasis role="strong">kbd:[myShortcut]</emphasis> for keyboard shortcuts</simpara>
</listitem>
<listitem>
<simpara>use <emphasis role="strong">\*myButton</emphasis>* for buttons</simpara>
</listitem>
<listitem>
<simpara>High level title should be on new pages (use <emphasis role="strong">&lt;&lt;&lt;</emphasis>)</simpara>
</listitem>
<listitem>
<simpara>don&#8217;t forget init/closure includes at beginning/end of the adoc</simpara>
</listitem>
<listitem>
<simpara>For STS, use TMP-STS-webmethods-template.adoc as a template</simpara>
</listitem>
</itemizedlist>
<simpara>To show a in progress diagram to colleagues, you can generate a link using this page : <link xl:href="http://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa70000">http://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa70000</link></simpara>
<simpara>To generate the PDF locally, use the maven command :</simpara>
<literallayout class="monospaced">mvn asciidoctor:process-asciidoc</literallayout>
<simpara>You might have some some errors about the history : It will be automatically generated on Jenkins. If you want too see how it looks like, use the script asciidocHistory.sh in src &#8594; scripts, with cg-wm directory path in argument.</simpara>
<section xml:id="__doc_to_adoc">
<title>.doc to .adoc</title>
<simpara>If the initial documentation is of Microsoft Word, you have to first migrate it to AsciiDoc file.</simpara>
<simpara>Download and install pandoc.</simpara>
<simpara>To migrate a document, use it in command line</simpara>
<literallayout class="monospaced">pandoc --from=docx --to=asciidoc --wrap=none --atx-headers --normalize --extract-media=images monDoc.docx &gt; monDoc.adoc</literallayout>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_eclipse_2">
<title>Eclipse</title>
<section xml:id="_installation">
<title>Installation</title>
<itemizedlist>
<listitem>
<simpara>Install the latest Eclipse JEE. You can use your own, but no team support below Neon version.</simpara>
</listitem>
<listitem>
<simpara>Install SonarLint plugin</simpara>
<itemizedlist>
<listitem>
<simpara>in order to connect to its local SonarQube server and be warned of violations in Eclipse, in real time</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Install Enhanced Class Decompiler plugin</simpara>
<itemizedlist>
<listitem>
<simpara>Enhanced Class Decompiler integrates JD, Jad, FernFlower, CFR, Procyon seamlessly with Eclipse and allows Java developers to debug class files without source code directly.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Install Git if you don&#8217;t already have it on your computer.</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_configuration">
<title>Configuration</title>
<simpara>Go to <emphasis role="strong">Window</emphasis> &#8594; <emphasis role="strong">preferences</emphasis></simpara>
<section xml:id="_formatter">
<title>Formatter</title>
<itemizedlist>
<listitem>
<simpara>Click on <emphasis role="strong">formatter</emphasis></simpara>
</listitem>
<listitem>
<simpara>Import this file</simpara>
<literallayout class="monospaced">src/docs/CG.Eclipse.Preferences.Java.CodeStyle.Formatter.xml</literallayout>
</listitem>
</itemizedlist>
</section>
<section xml:id="_members_sort_order">
<title>Members Sort Order</title>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Java</emphasis> &#8594; <emphasis role="strong">Appearance</emphasis> &#8594; <emphasis role="strong">Members Sort Order</emphasis></simpara>
</listitem>
<listitem>
<simpara>Organize as follow</simpara>
<itemizedlist>
<listitem>
<simpara>Static Fields</simpara>
</listitem>
<listitem>
<simpara>Fields</simpara>
</listitem>
<listitem>
<simpara>Types</simpara>
</listitem>
<listitem>
<simpara>Static Initializers</simpara>
</listitem>
<listitem>
<simpara>Initializers</simpara>
</listitem>
<listitem>
<simpara>Constructors</simpara>
</listitem>
<listitem>
<simpara>Static Methods</simpara>
</listitem>
<listitem>
<simpara>Methods</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_save_actions">
<title>Save actions</title>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Java</emphasis> &#8594; <emphasis role="strong">Editor</emphasis> &#8594; <emphasis role="strong">Save actions</emphasis></simpara>
</listitem>
<listitem>
<simpara>Check as follow :</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; Perform the selected actions on save</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; Format source code</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; Format all lines</simpara>
</listitem>
<listitem>
<simpara>&#10003; Format edited lines</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>&#10003; Organize imports</simpara>
</listitem>
<listitem>
<simpara>&#10003; Additional actions</simpara>
<itemizedlist>
<listitem>
<simpara>Add missing @Override annotations</simpara>
</listitem>
<listitem>
<simpara>Add missing @Override annotations to implementations of interface methods</simpara>
</listitem>
<listitem>
<simpara>Add missing @Deprecated annotations</simpara>
</listitem>
<listitem>
<simpara>Remove unnecessary casts</simpara>
</listitem>
<listitem>
<simpara>Sort members excluding fields, enum constants, and initializers</simpara>
</listitem>
<listitem>
<simpara>Remove redundant type arguments</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_encoding">
<title>Encoding</title>
<itemizedlist>
<listitem>
<simpara>Go to <emphasis role="strong">Window</emphasis> &#8594; <emphasis role="strong">Preferences</emphasis> &#8594; <emphasis role="strong">General</emphasis> &#8594; <emphasis role="strong">Workspace</emphasis></simpara>
</listitem>
<listitem>
<simpara>At the bottom, choose</simpara>
<itemizedlist>
<listitem>
<simpara>Other : UTF-8</simpara>
</listitem>
<listitem>
<simpara>Other : Unix</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_unnecessary_code_detector_plugin">
<title>Unnecessary Code Detector plugin</title>
<itemizedlist>
<listitem>
<simpara>Install Unnecessary Code Detector plugin to see unused declarations or wrongs declarations (public when it could be private for example), with this configuration :</simpara>
<itemizedlist>
<listitem>
<simpara>Window &gt; preferences &gt; UCDetector</simpara>
</listitem>
<listitem>
<simpara>ActiveMode = MyMode</simpara>
</listitem>
<listitem>
<simpara>Ignore &gt; [ ] Bean methods</simpara>
</listitem>
<listitem>
<simpara>Detect &gt; File name pattern to search =</simpara>
<literallayout class="monospaced">*.xml,MANIFEST.MF,*.tld,*.properties,*.jsp,*.jspf</literallayout>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_jautodoc_plugin">
<title>JAutoDoc plugin</title>
<itemizedlist>
<listitem>
<simpara>Install JautoDoc plugin to be able to :</simpara>
<itemizedlist>
<listitem>
<simpara>add Javadoc with right click &#8594; <emphasis role="strong">Add Javadoc</emphasis> on a class or a package</simpara>
</listitem>
<listitem>
<simpara>add Javadoc on a function by selecting its name and pressing <keycombo><keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>j</keycap></keycombo></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_autoderiv_plugin">
<title>AutoDeriv plugin</title>
<simpara>The target folder should always be marked as derived, not to appear in searches. Install the AutoDeriv plugin for this purpose, and configure it by creating the file below.</simpara>
<note>
<simpara>It can be placed in the project&#8217;s root directory, then it would be shared to others through the source code repository, but this works only for the current projects, not submodules !</simpara>
</note>
<formalpara>
<title>&lt;WORKSPACE&gt;/.derived</title>
<para>
<programlisting language="shell" linenumbering="unnumbered"># set the 'target' and 'ext' folders as derived
target
#ext

# but don't affect the 'keep' sub-folder
!target/generated-sources

# all files with a '.dep' extension are generated
#*.dep

# this specific file is also generated
#src/include/version.h</programlisting>
</para>
</formalpara>
</section>
<section xml:id="_commit_timeout">
<title>Commit timeout</title>
<itemizedlist>
<listitem>
<simpara>Navigate to <emphasis role="strong">Team</emphasis> &#8594; <emphasis role="strong">Git</emphasis></simpara>
</listitem>
<listitem>
<simpara>set <emphasis role="strong">Remote connection timeout (seconds)</emphasis> = 120</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_xml_line_size">
<title>XML Line size</title>
<simpara>The Eclipse XML Formatter split lines, and this is an issue for wagon plugin in pom.xml.</simpara>
<itemizedlist>
<listitem>
<simpara>Navigate to <emphasis role="strong">XML</emphasis> &#8594; <emphasis role="strong">Editor</emphasis></simpara>
</listitem>
<listitem>
<simpara>Set <emphasis role="strong">Line width</emphasis> = 200</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_disable_stealing_of_focus_by_console_in_eclipse">
<title>Disable stealing of focus by Console in Eclipse</title>
<simpara>There is one very annoying issue in Eclipse: stealing of focus by Console window.</simpara>
<simpara>Console window is displayed when you run application.</simpara>
<simpara>When you set focus to some other window like Search results and application prints something on output then Eclipse will automatically switch to Console window. Your search results are gone.</simpara>
<simpara>There is simple way how to get rid of such a behavior.</simpara>
<simpara>Go to Run/Debug &#8594; Console.</simpara>
<itemizedlist mark="none">
<title>Uncheck options :</title>
<listitem>
<simpara>&#10063; Show when program writes to standard out</simpara>
</listitem>
<listitem>
<simpara>&#10063; Show when program writes to standard error</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_egit_with_gerrit">
<title>EGit with Gerrit</title>
<formalpara>
<title>Git without Eclipse and Gerrit</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/this-is-git.png"/>
</imageobject>
<textobject><phrase>this is git</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
<note>
<simpara>To generate your password in Gerrit, right click on your username &#8594; <emphasis role="strong">Settings</emphasis> &#8594; <emphasis role="strong">HTTP password</emphasis> &#8594; <emphasis role="strong">Generate Password</emphasis></simpara>
</note>
<itemizedlist>
<title>On Eclipse</title>
<listitem>
<simpara>Open <emphasis role="strong">Git perspective</emphasis></simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">Clone a Git repository</emphasis></simpara>
</listitem>
<listitem>
<simpara>Fill the required data :</simpara>
</listitem>
</itemizedlist>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/git-clone1.png"/>
</imageobject>
<textobject><phrase>git clone1</phrase></textobject>
</inlinemediaobject></simpara>
<itemizedlist mark="none">
<listitem>
<simpara>URL : <link xl:href="https://cric.pl.s2-eu.nvx.com/gerrit/p/cg-wm.git">https://cric.pl.s2-eu.nvx.com/gerrit/p/cg-wm.git</link></simpara>
</listitem>
<listitem>
<simpara>Protocol = https</simpara>
</listitem>
<listitem>
<simpara>User = your CORP user</simpara>
</listitem>
<listitem>
<simpara>Password generated from Gerrit</simpara>
</listitem>
<listitem>
<simpara>&#10003; Store in Secure Store</simpara>
</listitem>
</itemizedlist>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/git-clone2.png"/>
</imageobject>
<textobject><phrase>git clone2</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>Enter your workspace in directory and then click on finish</simpara>
<simpara>After creating a new local Git repository, the Git repository of the project should
have this structure:</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/git-project.png"/>
</imageobject>
<textobject><phrase>git project</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>To configure Git, go to <emphasis role="strong">Window</emphasis> &#8594; <emphasis role="strong">Preferences</emphasis> &#8594; <emphasis role="strong">Team</emphasis> &#8594; <emphasis role="strong">Git</emphasis> &#8594; <emphasis role="strong">Configuration</emphasis>, on <emphasis role="strong">User setting</emphasis> click on <emphasis role="strong">Open</emphasis> and enter the following configuration after updating it with your personal  informations :</simpara>
<literallayout class="monospaced">[gui]
 recentrepo = F:\\git-repository\\cg-wm
[gerrit]
	createchangeid = true
[user]
	name = login
	email = nvx mail
[branch]
 autosetuprebase = always
[credential]
    helper = manager
[credential "https://cric.pl.s2-eu.nvx.com/gerrit/p/cg-wm.git"]
[credential "https://cric.pl.s2-eu.nvx.com/gerrit"]</literallayout>
<simpara>The "autosetuprebase = always" will allow you to do a fetch and a rebase by simply click on "pull".</simpara>
<simpara>On <emphasis role="strong">Repository Settings</emphasis> click on <emphasis role="strong">Open</emphasis> and enter the following configuration :</simpara>
<literallayout class="monospaced">[core]
	repositoryformatversion = 0
	filemode = false
	logallrefupdates = true
[remote "origin"]
	url = https://cric.pl.s2-eu.nvx.com/gerrit/p/cg-wm.git
	fetch = +refs/heads/*:refs/remotes/origin/*
	push = HEAD:refs/for/master
[branch "master"]
	merge = refs/heads/master
	rebase = true
	remote = origin</literallayout>
<simpara>After this Git configuration, restart eclipse.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_checkout_git_repository">
<title>Checkout Git Repository</title>
<formalpara>
<title>Life without the Production Line</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/no-error-update.jpg"/>
</imageobject>
<textobject><phrase>no error update</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
<simpara>To update Git repository click right on parent and select :</simpara>
<itemizedlist>
<listitem>
<simpara>"Pull" (If your  git  is  configured  to  do  a  fetch  and  rebase  on  "Pull")</simpara>
</listitem>
<listitem>
<simpara>or "Fetch from upstream", and then "Rebase"</simpara>
</listitem>
</itemizedlist>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/git-fetch_pull.png"/>
</imageobject>
<textobject><phrase>git fetch pull</phrase></textobject>
</inlinemediaobject></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_commit_push">
<title>Commit / push</title>
<formalpara>
<title>Life before Gerrit</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/git-hell.jpg"/>
</imageobject>
<textobject><phrase>git hell</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
<simpara>In order to commit a new change follow these steps:</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/gitAddChangeId.png"/>
</imageobject>
<textobject><phrase>gitAddChangeId</phrase></textobject>
</inlinemediaobject></simpara>
<itemizedlist>
<listitem>
<simpara>Show view <emphasis role="strong">Git Staging</emphasis> (or go to perspective Git and select "Git Staging" tab)</simpara>
</listitem>
<listitem>
<simpara>Drag your file not committed from Unstaged Changes to Staged Changes</simpara>
</listitem>
<listitem>
<simpara>On Commit message add your message and click on <emphasis role="strong">Add Change-Id</emphasis> to add an ID for your commit (you add a new change ID only when your previous is validated by the tech lead on Gerrit)</simpara>
</listitem>
<listitem>
<simpara>Click on</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Commit</emphasis> If you want to do a local commit (changes will be visible only by you)</simpara>
</listitem>
<listitem>
<simpara>or <emphasis role="strong">Commit and push</emphasis> If you want to do a commit on the shared repository</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>See the full review process in golden rules paragraph</simpara>
</listitem>
</itemizedlist>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/git-amend_commit.png"/>
</imageobject>
<textobject><phrase>git amend commit</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>This ID is related to your last change not yet validated.</simpara>
</section>
<section xml:id="_rebase">
<title>Rebase</title>
<simpara>In order to get the last version of the git repository, or if one of your commit is in <emphasis role="strong">Merge Conflict</emphasis> on gerrit, you need to do a rebase. Before doing it, commit all your uncommited changes, otherwise you might lose it. After that you can click on team &#8594; fetch from upstream, then team &#8594; rebase. If your git is configured to do a fetch and rebase on pull, just select pull. If there is some conflicts during the rebase, correct them, then team &#8594; rebase &#8594; continue rebase. The rebase is done, you have the lastest version of the git repository and your modifications. You can amend your commit and the "Merge Conflict" on gerrit will disapear.</simpara>
</section>
<section xml:id="_reset_mixed">
<title>Reset Mixed</title>
<simpara>In team &#8594; reset, you can find a usefull functionnality called Reset Mixed. The reset mixed will allow you to get the last version of the git repository (after a fetch from upstream), while keeping your modifications. It works like a rebase, except that your commit will be cancelled on your local workspace. You will be branched on the last commit on the git repository. Use it if you want to abandon a commit, do a fresh commit, or merge two of your commits in one for example.
Reset Hard can be used if you want to cancel all your modifications. All modifications will be erased.</simpara>
</section>
<section xml:id="_end">
<title>End</title>
<itemizedlist>
<listitem>
<simpara>Once your git is configured, import the project in your Java JEE view. (<emphasis role="strong">File</emphasis> &#8594; <emphasis role="strong">Import</emphasis> &#8594; type <emphasis role="strong">maven</emphasis> &#8594; <emphasis role="strong">Existing Maven Project</emphasis>).</simpara>
</listitem>
</itemizedlist>
<simpara>You should now have the cw-wm project in your Java JEE view and some sub modules.</simpara>
<itemizedlist>
<listitem>
<simpara>On the parent pom.xml in cg-wm, do:</simpara>
<itemizedlist>
<listitem>
<simpara>mvn install (to have all dependencies)</simpara>
</listitem>
<listitem>
<simpara>mvn eclipse:eclipse (to create .project and .classpath).</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>If an error about tools.jar appears during maven install, itâs probably because the JRE is not well defined by eclipse. Install the last JDK and change the path to the JDK instead of the JRE (<emphasis role="strong">Window</emphasis> &#8594; <emphasis role="strong">preferences</emphasis> &#8594; <emphasis role="strong">Java</emphasis> &#8594; <emphasis role="strong">Installed JREs</emphasis>).</simpara>
<itemizedlist>
<listitem>
<simpara>To start the MultiTracker, run the class cg-wm\cg-msg-tracker\src\main\java\cg\msg\tracker\Tracker.java</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_troubleshooting">
<title>Troubleshooting</title>
<section xml:id="_two_commits_at_the_same_time">
<title>Two commits at the same time</title>
<simpara>If you have a commit on gerrit, and if you want to change a file that is already in this commit, you should amend this commit instead of making a second commit.</simpara>
<simpara>You can have two or more commits at the same time if they are not dependants. To do so, you have to do a reset mixed on the state before your first commit in order to commit the second one.
It works like this :
If A is the last commit on the git repository, you can do a first commit B.
To make a second commit C, reset mixed on commit A, then commit. If you want to amend your commit B, reset mixed on A before doing it, and copy the description and change id for your commit on gerrit, to paste it like it is a new commit. You also need to select again the files that were in this commit.</simpara>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/git-rebase.png"/>
</imageobject>
<textobject><phrase>git rebase</phrase></textobject>
</inlinemediaobject></simpara>
</section>
<section xml:id="_pull_from_another_developer">
<title>Pull from another developer</title>
<simpara>To download a change of another developper from gerrit to your local :</simpara>
<itemizedlist>
<listitem>
<simpara>go to <emphasis role="strong">Git Repositories</emphasis> on your Eclipse</simpara>
</listitem>
<listitem>
<simpara>right click on your repository</simpara>
</listitem>
<listitem>
<simpara>select <emphasis role="strong">fetch from Gerrit</emphasis></simpara>
</listitem>
<listitem>
<simpara>on <emphasis role="strong">Change</emphasis> press <keycombo><keycap>Ctrl</keycap><keycap>Space</keycap></keycombo></simpara>
</listitem>
<listitem>
<simpara>select your change</simpara>
<itemizedlist>
<listitem>
<simpara>To change is of the form :</simpara>
<literallayout class="monospaced">&lt;(small) change number&gt; - &lt;patchset number&gt;</literallayout>
</listitem>
<listitem>
<simpara>The small change number is visible in gerrit page in the upper left area (clickable)</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">finish</emphasis></simpara>
</listitem>
</itemizedlist>
<warning>
<simpara>If you don&#8217;t have the option <emphasis role="strong">fetch from Gerrit</emphasis> : Go to the <emphasis role="strong">Git repositories</emphasis> view, under your repo, in <emphasis role="strong">Remotes</emphasis>, right click on <emphasis role="strong">origin</emphasis> and select <emphasis role="strong">Gerrit configuration&#8230;&#8203;</emphasis>. Check that everything is OK and click <emphasis role="strong">Finish</emphasis>. Now you should have the option.</simpara>
</warning>
<simpara><inlinemediaobject>
<imageobject>
<imagedata fileref="images/fetch_from_gerrit.png"/>
</imageobject>
<textobject><phrase>fetch from gerrit</phrase></textobject>
</inlinemediaobject></simpara>
<simpara>To keep this branch up to date with the master :</simpara>
<itemizedlist>
<listitem>
<simpara>Go to <emphasis role="strong">Git Repositories</emphasis></simpara>
</listitem>
<listitem>
<simpara>Right click on your repository &gt; <emphasis role="strong">Pull</emphasis></simpara>
</listitem>
<listitem>
<simpara>Navigate in you repository &#8594; <emphasis role="strong">Branches</emphasis> &#8594; <emphasis role="strong">Local</emphasis></simpara>
</listitem>
<listitem>
<simpara>Rigth click on the <emphasis role="strong">master</emphasis> branch &#8594; <emphasis role="strong">Rebase On</emphasis></simpara>
</listitem>
<listitem>
<simpara>Resolve the conflicts if any</simpara>
</listitem>
</itemizedlist>
<simpara>To switch back to your master, right click on your repo &#8594; <emphasis role="strong">Switch To</emphasis> &#8594; <emphasis role="strong">master</emphasis>.</simpara>
</section>
<section xml:id="_missing_change_id_in_commit_message_footer">
<title>Missing Change-Id in commit message footer</title>
<simpara>On your first push, you might get this error from Gerrit</simpara>
<literallayout class="monospaced"> [f57ea8b] missing Change-Id in commit message footer
Processing changes: refs: 1
Processing changes: refs: 1, done
ERROR: [f57ea8b] missing Change-Id in commit message footer
 Hint: To automatically insert Change-Id, install the hook:
  gitdir=$(git rev-parse --git-dir); scp -p -P 29418 yremila@cdsdouane.pl.s2-eu.nvx.com:hooks/commit-msg ${gitdir}/hooks/
 And then amend the commit:
  git commit --amend</literallayout>
<simpara>Doing a <emphasis role="strong">reset mixed</emphasis> on the initial commit would solve the problem.</simpara>
<simpara>If not, here is another solution :</simpara>
<itemizedlist>
<listitem>
<simpara>Download this file <link xl:href="https://gerrit-review.googlesource.com/tools/hooks/commit-msg">https://gerrit-review.googlesource.com/tools/hooks/commit-msg</link></simpara>
</listitem>
<listitem>
<simpara>Put it in myproject/.git/hooks/</simpara>
</listitem>
<listitem>
<simpara>Restart Eclipse</simpara>
</listitem>
<listitem>
<simpara>Retry the commit</simpara>
</listitem>
</itemizedlist>
<simpara>Last solution, requiring Cygwin :</simpara>
<literallayout class="monospaced">gitdir=$(git rev-parse --git-dir); wget -P ${gitdir}/hooks/ http://bcouetil@cric.pl.s2-eu.nvx.com/gerrit/tools/hooks/commit-msg &amp;&amp; chmod +x ${gitdir}/hooks/commit-msg</literallayout>
</section>
<section xml:id="__classpath_and_other_not_to_push_files">
<title>.classpath and other not-to-push files</title>
<simpara>If there are files in git repository not to be pushed, remove them in your next push :</simpara>
<itemizedlist>
<listitem>
<simpara>Update the .gitignore file, if not already done</simpara>
</listitem>
<listitem>
<simpara>Go to <emphasis role="strong">Git Staging</emphasis> view</simpara>
</listitem>
<listitem>
<simpara>Right click on the file &#8594; <emphasis role="strong">Team</emphasis> &#8594; <emphasis role="strong">Untrack</emphasis></simpara>
</listitem>
<listitem>
<simpara>The file should be moved to <emphasis role="strong">Staged changes</emphasis> (it can take a few seconds)</simpara>
</listitem>
<listitem>
<simpara>This will be taken into account in next <emphasis role="strong">Commit and Push&#8230;&#8203;</emphasis></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_see_sonarqube_for_an_older_build">
<title>See SonarQube for an older build</title>
<simpara>SonarQube does not have history available for browsing, you can only see the last build. So you have to retrigger the gerrit patch to see specific data associated to your change.</simpara>
<simpara>You can do an empty <emphasis role="strong">commit amend</emphasis> from Eclipse. But you can also retrigger from Jenkins.</simpara>
<itemizedlist>
<listitem>
<simpara>Go to Jenkins homepage</simpara>
</listitem>
<listitem>
<simpara>Navigate to the pipeline/job</simpara>
</listitem>
<listitem>
<simpara>If your build is still in the history</simpara>
<itemizedlist>
<listitem>
<simpara>Open it</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Retrigger</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Else if your build has been deleted</simpara>
<itemizedlist>
<listitem>
<simpara>Go to Jenkins homepage</simpara>
</listitem>
<listitem>
<simpara>Click on <emphasis role="strong">Query and Trigger Gerrit Patches</emphasis></simpara>
</listitem>
<listitem>
<simpara>In <emphasis role="strong">Query String</emphasis>, put your change-id</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">SEARCH</emphasis></simpara>
</listitem>
<listitem>
<simpara>Select the change</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">TRIGGER SELECTED</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_double_remote_get_latest_commits_from_gitlab_into_gerrit">
<title>Double remote : get latest commits from gitlab into gerrit</title>
<simpara>In the case of a gitlab to gerrit migration, you may have a common ancestor but commits on Gerrit and commits on Gitlab. It&#8217;s easy if you can replace the whole gerrit master, but here is the way to go for a clean merge :</simpara>
<itemizedlist>
<listitem>
<simpara>have your gerrit clone in Eclipse</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Git</emphasis> view</simpara>
</listitem>
<listitem>
<simpara>Right click on your <emphasis role="strong">Remotes</emphasis> where there is already a Gerrit <emphasis role="strong">origin</emphasis></simpara>
</listitem>
<listitem>
<simpara>Choos* <emphasis role="strong">Create Remote&#8230;&#8203;</emphasis></simpara>
</listitem>
<listitem>
<simpara>Create your gitlab remote while configuring fetch with only the <emphasis role="strong">master</emphasis> branch. Name it <emphasis role="strong">gitlab</emphasis></simpara>
</listitem>
<listitem>
<simpara>right click on the new remote and choose <emphasis role="strong">fetch</emphasis></simpara>
</listitem>
<listitem>
<simpara>right click on your repository and select <emphasis role="strong">pull</emphasis></simpara>
</listitem>
<listitem>
<simpara>Finish by this in command line :</simpara>
<literallayout class="monospaced">git push origin master</literallayout>
</listitem>
</itemizedlist>
</section>
<section xml:id="_get_rid_of_orig_head_fetch_head_in_git_history">
<title>Get rid of ORIG_HEAD / FETCH_HEAD in Git history</title>
<simpara>ORIG_HEAD is last value of HEAD before dangerous operation. This reference and FETCH_HEAD are not real commits, and can be hidden in <emphasis role="strong">Preferences</emphasis> &#8594; <emphasis role="strong">Team</emphasis> &#8594; <emphasis role="strong">Git</emphasis> &#8594; <emphasis role="strong">History</emphasis> by deselecting <emphasis role="strong">Additional Refs</emphasis></simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</section>
<section xml:id="_maven">
<title>Maven</title>
<itemizedlist>
<listitem>
<simpara>Change the conf/setting.xml of the installed maven, by adding the below tags</simpara>
</listitem>
</itemizedlist>
<screen>&lt;server&gt;
	&lt;id&gt;nexus-local&lt;/id&gt;
	&lt;username&gt;svc-fr-cric&lt;/username&gt;
	&lt;password&gt;ESBpwd2018&lt;/password&gt;
&lt;/server&gt;</screen>
<programlisting language="xml" linenumbering="unnumbered">&lt;mirrors&gt;
	&lt;mirror&gt;
		&lt;id&gt;nexus-local&lt;/id&gt;
		&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
		&lt;url&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-public/&lt;/url&gt;
	&lt;/mirror&gt;
&lt;/mirrors&gt;</programlisting>
<programlisting language="xml" linenumbering="unnumbered">&lt;profiles&gt;
	&lt;profile&gt;
		&lt;id&gt;nexus-local&lt;/id&gt;
		&lt;repositories&gt;
			&lt;repository&gt;
				&lt;id&gt;central&lt;/id&gt;
				&lt;url&gt;http://central&lt;/url&gt;
				&lt;releases&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/releases&gt;
				&lt;snapshots&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/snapshots&gt;
			&lt;/repository&gt;
		&lt;/repositories&gt;

		&lt;pluginRepositories&gt;
			&lt;pluginRepository&gt;
				&lt;id&gt;central&lt;/id&gt;
				&lt;url&gt;http://central&lt;/url&gt;
				&lt;releases&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/releases&gt;
				&lt;snapshots&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/snapshots&gt;
			&lt;/pluginRepository&gt;
		&lt;/pluginRepositories&gt;

		&lt;properties&gt;
			&lt;snapshotUrl&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-snapshots/&lt;/snapshotUrl&gt;
			&lt;releaseUrl&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-releases/&lt;/releaseUrl&gt;
		&lt;/properties&gt;

	&lt;/profile&gt;
&lt;/profiles&gt;</programlisting>
<programlisting language="xml" linenumbering="unnumbered">&lt;activeProfiles&gt;
	&lt;activeProfile&gt;nexus-local&lt;/activeProfile&gt;
&lt;/activeProfiles&gt;</programlisting>
<itemizedlist>
<listitem>
<simpara>Change the conf/setting.xml of the installed maven, by adding the below tags</simpara>
</listitem>
</itemizedlist>
<screen>&lt;server&gt;
	&lt;id&gt;nexus-local&lt;/id&gt;
	&lt;username&gt;svc-fr-cric&lt;/username&gt;
	&lt;password&gt;ESBpwd2018&lt;/password&gt;
&lt;/server&gt;</screen>
<programlisting language="xml" linenumbering="unnumbered">&lt;mirrors&gt;
	&lt;mirror&gt;
		&lt;id&gt;nexus-local&lt;/id&gt;
		&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
		&lt;url&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-public/&lt;/url&gt;
	&lt;/mirror&gt;
&lt;/mirrors&gt;</programlisting>
<programlisting language="xml" linenumbering="unnumbered">&lt;profiles&gt;
	&lt;profile&gt;
		&lt;id&gt;nexus-local&lt;/id&gt;
		&lt;repositories&gt;
			&lt;repository&gt;
				&lt;id&gt;central&lt;/id&gt;
				&lt;url&gt;http://central&lt;/url&gt;
				&lt;releases&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/releases&gt;
				&lt;snapshots&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/snapshots&gt;
			&lt;/repository&gt;
		&lt;/repositories&gt;

		&lt;pluginRepositories&gt;
			&lt;pluginRepository&gt;
				&lt;id&gt;central&lt;/id&gt;
				&lt;url&gt;http://central&lt;/url&gt;
				&lt;releases&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/releases&gt;
				&lt;snapshots&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/snapshots&gt;
			&lt;/pluginRepository&gt;
		&lt;/pluginRepositories&gt;

		&lt;properties&gt;
			&lt;snapshotUrl&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-snapshots/&lt;/snapshotUrl&gt;
			&lt;releaseUrl&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-releases/&lt;/releaseUrl&gt;
		&lt;/properties&gt;

	&lt;/profile&gt;
&lt;/profiles&gt;</programlisting>
<programlisting language="xml" linenumbering="unnumbered">&lt;activeProfiles&gt;
	&lt;activeProfile&gt;nexus-local&lt;/activeProfile&gt;
&lt;/activeProfiles&gt;</programlisting>
<itemizedlist>
<listitem>
<simpara>Change the conf/setting.xml of the installed maven, by adding the below tags</simpara>
</listitem>
</itemizedlist>
<screen>&lt;server&gt;
	&lt;id&gt;nexus-local&lt;/id&gt;
	&lt;username&gt;svc-fr-cric&lt;/username&gt;
	&lt;password&gt;ESBpwd2018&lt;/password&gt;
&lt;/server&gt;</screen>
<programlisting language="xml" linenumbering="unnumbered">&lt;mirrors&gt;
	&lt;mirror&gt;
		&lt;id&gt;nexus-local&lt;/id&gt;
		&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
		&lt;url&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-public/&lt;/url&gt;
	&lt;/mirror&gt;
&lt;/mirrors&gt;</programlisting>
<programlisting language="xml" linenumbering="unnumbered">&lt;profiles&gt;
	&lt;profile&gt;
		&lt;id&gt;nexus-local&lt;/id&gt;
		&lt;repositories&gt;
			&lt;repository&gt;
				&lt;id&gt;central&lt;/id&gt;
				&lt;url&gt;http://central&lt;/url&gt;
				&lt;releases&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/releases&gt;
				&lt;snapshots&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/snapshots&gt;
			&lt;/repository&gt;
		&lt;/repositories&gt;

		&lt;pluginRepositories&gt;
			&lt;pluginRepository&gt;
				&lt;id&gt;central&lt;/id&gt;
				&lt;url&gt;http://central&lt;/url&gt;
				&lt;releases&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/releases&gt;
				&lt;snapshots&gt;
					&lt;enabled&gt;true&lt;/enabled&gt;
				&lt;/snapshots&gt;
			&lt;/pluginRepository&gt;
		&lt;/pluginRepositories&gt;

		&lt;properties&gt;
			&lt;snapshotUrl&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-snapshots/&lt;/snapshotUrl&gt;
			&lt;releaseUrl&gt;https://cric.pl.s2-eu.nvx.com/nexus3/repository/maven-releases/&lt;/releaseUrl&gt;
		&lt;/properties&gt;

	&lt;/profile&gt;
&lt;/profiles&gt;</programlisting>
<programlisting language="xml" linenumbering="unnumbered">&lt;activeProfiles&gt;
	&lt;activeProfile&gt;nexus-local&lt;/activeProfile&gt;
&lt;/activeProfiles&gt;</programlisting>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_appendix">
<title>Appendix</title>
<section xml:id="_revision_marks">
<title>Revision marks</title>
<formalpara>
<title>Differences since last tag</title>
<para>
<programlisting language="diff" linenumbering="unnumbered">Unresolved directive in subdocs/_closure.adoc - include::D:\workspaceJava\cg-wm\target/generated-docs/history/developer-guide.adoc.diff[]</programlisting>
</para>
</formalpara>
</section>
</section>
</article>